{"version":3,"file":"static/js/5440.64eddfe4.chunk.js","mappings":"kSAaA,MAAMA,EAAiBA,KACrBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAWC,IAAI,gBACzBH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UACjCC,EAAAA,EAAAA,KAAA,OAAKC,IAAKG,EAAAA,EAAMD,IAAI,cAMX,SAASE,IACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACZC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAE/BG,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJC,MAAM,uCACNC,SAAS,wBAqDhB,OACEhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAS,CAAAlB,UACRC,EAAAA,EAAAA,KAACkB,EAAAA,EAAG,CAAAnB,UACFC,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACC,GAAI,GAAGrB,UACVF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAACJ,EAAc,KACfC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACHC,EAAAA,EAAAA,KAACqB,EAAAA,GAAM,CACQC,cAAe,CACbP,MAAO,IAETF,iBAAkBA,EAClBU,SA9DLC,UACnBf,GAAW,GACX,MAAM,MAAEM,GAAUU,EAElB,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,IAAQC,EAAAA,EAAcC,gBAAiB,CAC5Dd,QACA,UAAa,YAErBe,QAAQC,IAAIL,GACM,OAARA,QAAQ,IAARA,GAAAA,EAAUM,QAEZC,IAAAA,KAAU,CACRC,KAAM,UACNC,MAAO,WACPC,KAAM,IAAIV,EAASW,WACnBC,kBAAmB,SAClBC,MAAK,KACNjC,EAAS,IAAI,IAIf2B,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,mBACPC,KAAM,mBACNE,kBAAmB,aAGzB,CAAE,MAAO3B,GAGP,MAAM6B,EAAoB,OAAL7B,QAAK,IAALA,OAAK,EAALA,EAAO0B,QAE5BzB,EAAS4B,GAETP,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAOK,EACPJ,KAAMzB,EAAMA,MACZ2B,kBAAmB,aAEvB,CAAC,QACC7B,GAAW,EACb,GAkB+CV,SAEtB0C,IAAA,IAAC,aAAEC,GAAcD,EAAA,OAChB5C,EAAAA,EAAAA,MAAC8C,EAAAA,GAAI,CAAC7C,UAAU,wCAAuCC,SAAA,EACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAO4C,QAAQ,QAAO7C,SAAC,kBACvBC,EAAAA,EAAAA,KAAC6C,EAAAA,GAAK,CAACC,KAAK,QAAQC,GAAG,QAAQC,KAAK,QAAQlD,UAAU,eAAemD,YAAY,yBACjFjD,EAAAA,EAAAA,KAACkD,EAAAA,GAAY,CAACF,KAAK,QAAQG,UAAU,MAAMrD,UAAU,sBAGvDE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gDAA+CC,UAC5DC,EAAAA,EAAAA,KAAA,UAAQ8C,KAAK,SAAShD,UAAU,+BAA+BsD,SAAUV,GAAgBlC,EAAQT,SAC9FS,EAAU,gBAAkB,eAG5B,eASrC,C","sources":["Components/LearnerForgetPassword.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport loginSide from \"../assets/images/loginSide.png\"; // Image for side section\r\nimport logo from \"../assets/images/logo.svg\"; // Logo image\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\"; // Import Formik\r\nimport * as Yup from \"yup\"; // Import Yup for validation\r\nimport { Link, useNavigate } from \"react-router-dom\"; // Import useNavigate for redirecting\r\nimport { apiPost } from \"../utilities/axiosInstance\"; // Assuming apiPost is set up for POST requests\r\nimport API_ENDPOINTS from \"../utilities/apiEndPoints\"; // Your API endpoints\r\nimport Swal from \"sweetalert2\"; // Import SweetAlert2 for notifications\r\n\r\n\r\n// Logo Section Component (Left Side)\r\nconst LoginSideImage = () => (\r\n  <div className=\"LoginFormWrp__left\">\r\n    <img src={loginSide} alt=\"Login Side\" />\r\n    <div className=\"LoginFormWrp__logo\">\r\n      <img src={logo} alt=\"logo\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// Main Login Component\r\nexport default function LearnerForgetPassword(){\r\n    const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null); // To capture any error during form submission\r\n  // Validation schema for Formik using Yup\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string()\r\n      .email(\"Please enter a valid email address.\")\r\n      .required(\"Email is required.\"),\r\n  });\r\n\r\n  // Handle form submission and API call\r\n  const handleSubmit = async (values) => {\r\n    setLoading(true);\r\n    const { email } = values;\r\n\r\n    try {\r\n      const response = await apiPost(API_ENDPOINTS.FORGOT_PASSWORD, {\r\n        email,\r\n        \"user_type\": \"learner\",\r\n      });\r\nconsole.log(response)\r\n      if (response?.success) {\r\n         // Show SweetAlert for success\r\n        Swal.fire({\r\n          icon: \"success\",\r\n          title: \"Success!\",\r\n          text: ` ${response.message}!`,\r\n          confirmButtonText: \"Okay\",\r\n        }).then(() => {\r\n          navigate(\"/\");\r\n        });\r\n      } else {\r\n        //throw new Error(response)\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: 'Invalid Email id',\r\n          text: \"Invalid EMail ID\",\r\n          confirmButtonText: \"Try Again\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      // Log the full error to understand its structure\r\n      //console.log(error?.message)\r\n      const errorMessage = error?.message;\r\n      // Set the error message for display in the UI\r\n      setError(errorMessage);\r\n      // Show a SweetAlert popup with the correct error message\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: errorMessage,\r\n        text: error.error,\r\n        confirmButtonText: \"Try Again\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n    \r\n  };\r\n\r\n\r\nreturn (\r\n  <Container>\r\n    <Row>\r\n      <Col lg={12}>\r\n        <div className=\"LoginFormWrp d-flex\">\r\n          <LoginSideImage />\r\n          <div className=\"LoginFormWrp__right\">\r\n            <h2>Forget Password</h2>\r\n             <Formik\r\n                            initialValues={{\r\n                              email: \"\",\r\n                            }}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={handleSubmit}\r\n                          >\r\n                            {({ isSubmitting }) => (\r\n                              <Form className=\"LoginFormWrp__form d-flex flex-column\">\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"email\">* Your Email</label>\r\n                                  <Field type=\"email\" id=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter your email...\" />\r\n                                  <ErrorMessage name=\"email\" component=\"div\" className=\"error-message\"/>\r\n                                </div>\r\n            \r\n                                <div className=\"d-flex flex-column gap-3 LoginFormWrp__btnWrp\">\r\n                                  <button type=\"submit\" className=\"btn btn-white has-hover-blue\" disabled={isSubmitting || loading}>\r\n                                    {loading ? \"Sending in...\" : \"Send >\"}\r\n                                  </button>\r\n                                </div>\r\n                              </Form>\r\n                            )}\r\n                          </Formik>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n}\r\n\r\n"],"names":["LoginSideImage","_jsxs","className","children","_jsx","src","loginSide","alt","logo","LearnerForgetPassword","navigate","useNavigate","loading","setLoading","useState","error","setError","validationSchema","Yup","email","required","Container","Row","Col","lg","Formik","initialValues","onSubmit","async","values","response","apiPost","API_ENDPOINTS","FORGOT_PASSWORD","console","log","success","Swal","icon","title","text","message","confirmButtonText","then","errorMessage","_ref","isSubmitting","Form","htmlFor","Field","type","id","name","placeholder","ErrorMessage","component","disabled"],"sourceRoot":""}