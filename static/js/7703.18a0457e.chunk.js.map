{"version":3,"file":"static/js/7703.18a0457e.chunk.js","mappings":"6SAWe,SAASA,IACtB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,KACvD,SAAEG,EAAQ,MAAEC,EAAK,kBAAEC,IAAsBC,EAAAA,EAAAA,MACxCC,EAAWC,IAAgBR,EAAAA,EAAAA,WAAS,IACpCS,EAAmBC,IAAwBV,EAAAA,EAAAA,YAC5CW,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,KACuBC,WAC7BN,GAAa,GACb,IACE,MAAMO,QAAkCC,EAAAA,EAAMC,IAC5C,8CAAwCC,EAAAA,EAAcC,2BACtD,CACEC,QAAS,CACPC,cAAe,UAAUjB,IACzB,eAAgB,sBAIlBW,EAA0BO,KAAKC,UACjCf,GAAa,GAEbE,EAAqBK,EAA0BO,KAAKA,MAExD,CAAE,MAAOE,GACR,CACA,QAEChB,GAAa,EACf,GAEFiB,EAAwB,GACvB,IAGH,MAAMC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,WAAYF,EAAAA,KAAaG,SAAS,0BAElCC,UAAWJ,EAAAA,KAAaG,SAAS,yBACjCE,UAAWL,EAAAA,KAAaG,SAAS,sBACjCG,SAAUN,EAAAA,KAAaG,SAAS,4BAA4BI,QACpD,eACA,6DAERC,MAAOR,EAAAA,KAAaQ,MAAM,iBAAiBL,SAAS,qBACpDM,SAAUT,EAAAA,KAAaG,SAAS,wBAChCO,mBAAoBV,EAAAA,KAAaG,SAAS,8BAItCQ,EAA2BX,EAAAA,KAAaC,MAAM,CAClDW,aAAcZ,EAAAA,KAAaG,SAAS,4BACpCU,aAAcb,EAAAA,KAAac,IAAI,EAAG,0CAClCC,iBAAkBf,EAAAA,KACfgB,MAAM,CAAChB,EAAAA,GAAQ,gBAAiB,MAAO,wBACvCG,SAAS,sCAGd,OACEc,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EAC1BD,EAAAA,EAAAA,KAACI,EAAAA,EAAU,KACXJ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBF,UAClCD,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAAJ,UACRD,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAAAL,UACFD,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAGP,UAEVC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBF,SAAA,EAClCD,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,QAASA,IAAM3C,GAAU,GAAGkC,SAAC,gBACnCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,sBACJC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BF,SAAA,EAEvCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BF,SAAA,CAAC,KAACD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,kBAAkB,QAEjED,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACLC,oBAAoB,EACpBC,cAAe,CACb5B,YAA6B,OAAjBpB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBoB,aAAc,GAC7C6B,sBAAuC,OAAjBjD,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBiD,uBAAwB,GACjE3B,WAA4B,OAAjBtB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBsB,YAAa,GAC3CC,WAA4B,OAAjBvB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBuB,YAAa,IAC3CC,UAA2B,OAAjBxB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBwB,WAAY,GACzCE,OAAwB,OAAjB1B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB0B,QAAS,GACnCC,UAA2B,OAAjB3B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB2B,WAAY,GACzCuB,aAAc,MAEdtB,oBAAqC,OAAjB5B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB4B,qBAAsB,IAE/DX,iBAAkBA,EAClBkC,SAAU9C,MAAO+C,EAAMC,KAAyB,IAAvB,cAAEC,GAAeD,EAExCtD,GAAa,GACb,IACE,MAAMwD,EAAc,IACfH,EACHI,YAAa,kBAETC,QAAiBlD,EAAAA,EAAMmD,KAC3B,8CAAwCjD,EAAAA,EAAckD,kCACtDJ,EACA,CACE5C,QAAS,CACPC,cAAe,UAAUjB,IACzB,eAAgB,sBAKnB8D,EAAS5C,KAAKC,SACfxB,GAAa,GACbsE,IAAAA,KACE,WACA,GAAGH,EAAS5C,KAAKgD,UACjB,WAEFjE,EAAkBwD,EAAOhC,YACzB0C,eAAeC,QAAQ,cAAcX,EAAOhC,cAG5C9B,GAAa,GACbsE,IAAAA,KACE,SACA,GAAGH,EAAS5C,KAAKgD,UACjB,SAIN,CAAE,MAAO9C,GACPiD,QAAQjD,MAAM,0BAA2BA,GACzC6C,IAAAA,KACE,SACA,GAAG7C,EAAM0C,SAAS5C,KAAKgD,UACvB,QAEJ,CAAC,QACC9D,GAAa,GACbuD,GAAc,EAChB,GACAlB,SAED6B,IAAA,IAAC,OAAEC,EAAM,QAAEC,GAASF,EAAA,OACnB9B,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBF,UAClCC,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAAC9B,UAAU,mBAAkBF,SAAA,EAEhCC,EAAAA,EAAAA,MAAA,YAAUC,UAAU,OAAMF,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,aAAYjC,SAAC,kBAC5BD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAAEC,KAAK,OAAOC,KAAK,aAAaC,GAAG,eACxCP,EAAO9C,YAAc+C,EAAQ/C,aAC5Be,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnB8B,EAAO9C,iBAIdiB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,uBAAsBjC,SAAC,4BACtCD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAAEC,KAAK,OAAOC,KAAK,uBAAuBC,GAAG,gCAQvDpC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,YAAWjC,SAAC,gBAC3BD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAAEC,KAAK,OAAQC,KAAK,YAAaC,GAAG,cACzCP,EAAO5C,WAAa6C,EAAQ7C,YAC3Ba,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnB8B,EAAO5C,gBAIde,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,YAAWjC,SAAC,aAC3BC,EAAAA,EAAAA,MAACiC,EAAAA,GAAK,CAACI,GAAG,SAASF,KAAK,YAAYC,GAAG,YAAWrC,SAAA,EAChDD,EAAAA,EAAAA,KAAA,UAAQwC,UAAQ,EAAAvC,SAAC,mBACjBD,EAAAA,EAAAA,KAAA,UAAQyC,MAAM,IAAGxC,SAAC,YAClBD,EAAAA,EAAAA,KAAA,UAAQyC,MAAM,IAAGxC,SAAC,UAClBD,EAAAA,EAAAA,KAAA,UAAQyC,MAAM,IAAGxC,SAAC,aAEnB8B,EAAOW,QAAUV,EAAQU,SACxB1C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SAAE8B,EAAO3C,mBAIrCc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,WAAUjC,SAAC,mBAC1BD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAAEC,KAAK,OAAQC,KAAK,WAAWC,GAAG,aACvCP,EAAO1C,UAAY2C,EAAQ3C,WAC1BW,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnB8B,EAAO1C,eAIda,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,QAAOjC,SAAC,YACvBD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQC,GAAG,UACnCP,EAAOxC,OAASyC,EAAQzC,QACvBS,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SAAE8B,EAAOxC,eAIrCW,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,WAAUjC,SAAC,eAC1BD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAAEC,KAAK,OAAOC,KAAK,WAAWC,GAAG,aACtCP,EAAOvC,UAAYwC,EAAQxC,WAC1BQ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SAAE8B,EAAOvC,eAGnCQ,EAAAA,EAAAA,KAAA,OAAKG,UAAU,8EAA6EF,UAC1F8B,EAAO9C,aAAgB8C,EAAO5C,YAAc4C,EAAOW,SAClDX,EAAO1C,WAAa0C,EAAOxC,QAAWwC,EAAOvC,WAChDQ,EAAAA,EAAAA,KAAA,UAAQG,UAAU,6BAA6BO,QAASA,IAAMvD,GAAa,GACzEiF,KAAK,SAASnC,SACb,wBAQN/C,IACC8C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,UACpBD,EAAAA,EAAAA,KAACK,EAAAA,EAAS,CAAAJ,UACRD,EAAAA,EAAAA,KAACM,EAAAA,EAAG,CAAAL,UACFD,EAAAA,EAAAA,KAACO,EAAAA,EAAG,CAACC,GAAI,GAAGP,UACVC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCF,SAAA,EAClDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDF,SAAA,EACrED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJD,EAAAA,EAAAA,KAAA,UAAQoC,KAAK,SAASjC,UAAU,eAAeO,QAASA,IAAMvD,GAAa,GAAO8C,SAAC,WAErFC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8BAA6BF,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,qBAAoBjC,SAAC,0CACpCD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,KAAK,WAAWC,KAAK,qBAAqBC,GAAG,uBACnDP,EAAOtC,oBACNuC,EAAQvC,qBACNO,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnB8B,EAAOtC,yBAIhBO,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BF,UAC5CD,EAAAA,EAAAA,KAAA,UAASG,UAAU,eAAgBiC,KAAK,SAASI,SAAU7E,EAC1DsC,SACA,iCAab,KAQVD,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACLC,oBAAoB,EACpBC,cAAe,CAEblB,cAA+B,OAAjB9B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB8B,eAAgB,GACjDC,cAA+B,OAAjB/B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB+B,eAAgB,GACjDE,kBAAmC,OAAjBjC,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBiC,mBAAoB,IAE3DhB,iBAAkBY,EAClBsB,SAAU9C,MAAO+C,EAAM0B,KAAyB,IAAvB,cAAExB,GAAewB,EACxC/E,GAAa,GACb,IACE,MAAMwD,EAAc,IACfH,EACHI,YAAa,mBAETC,QAAiBlD,EAAAA,EAAMmD,KAC3B,8CAAwCjD,EAAAA,EAAckD,kCACtDJ,EACA,CACE5C,QAAS,CACPC,cAAe,UAAUjB,IACzB,eAAgB,sBAKnB8D,EAAS5C,KAAKC,QACf8C,IAAAA,KACE,WACA,GAAGH,EAAS5C,KAAKgD,UACjB,WAIFD,IAAAA,KACE,SACA,GAAGH,EAAS5C,KAAKgD,UACjB,QAIN,CAAE,MAAO9C,GAEP6C,IAAAA,KACE,SACA,GAAG7C,EAAM0C,SAAS5C,KAAKgD,UACvB,QAEJ,CAAC,QACC9D,GAAa,GACbuD,GAAc,EAChB,GACAlB,SAED2C,IAAA,IAAC,OAAEb,EAAM,QAAEC,GAASY,EAAA,OACnB5C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sBAAqBF,UAClCC,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAAC9B,UAAU,mBAAkBF,SAAA,EAIhCD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BAA0BF,UACvCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uBAENC,EAAAA,EAAAA,MAAA,YAAUC,UAAU,OAAMF,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,eAAcjC,SAAC,wBAC9BD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAAEC,KAAK,WAAWC,KAAK,eAAeC,GAAG,iBAC9CP,EAAOpC,cACNqC,EAAQrC,eACNK,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnB8B,EAAOpC,mBAIhBO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,eAAcjC,SAAC,sBAC9BD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAACC,KAAK,WAAWC,KAAK,eAAeC,GAAG,iBAC7CP,EAAOnC,cACNoC,EAAQpC,eACNI,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnB8B,EAAOnC,mBAIhBM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACtCD,EAAAA,EAAAA,KAAA,SAAOkC,QAAQ,mBAAkBjC,SAAC,4BAClCD,EAAAA,EAAAA,KAACmC,EAAAA,GAAK,CAAEC,KAAK,WAAWC,KAAK,mBAAmBC,GAAG,qBAClDP,EAAOjC,kBACNkC,EAAQlC,mBACNE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOF,SACnB8B,EAAOjC,uBAKlBE,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6EAA4EF,UACzFD,EAAAA,EAAAA,KAAA,UAASoC,KAAK,kBAAmBjC,UAAU,eAAeqC,SAAU7E,EAAUsC,SAAC,+BAS/E,sBAiB9B,C","sources":["Learner-dashboard/PersonalDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Breadcrumb from \"./Components/Breadcrumb\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport API_ENDPOINTS from \"../utilities/apiEndPoints\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\n\r\nexport default function LearnerPersonalDetails() {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [enteredOldPassword, setEnteredOldPassword] = useState(\"\");\r\n  const { userData, token, setNewProfileName } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [InstructorDetails, setInstructorDetails] = useState();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const fetchInstructorDetails = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const InstructorDetailsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.LEARNER_PERSONAL_DETAILS}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (InstructorDetailsResponse.data.success) {\r\n          setIsLoading(false);\r\n          // console.log(InstructorDetailsResponse);\r\n          setInstructorDetails(InstructorDetailsResponse.data.data);\r\n        }\r\n      } catch (error) {\r\n       // console.log(\"Error fetching instructor details\", error);\r\n      }\r\n      finally{\r\n        setIsLoading(false)\r\n      }\r\n    };\r\n    fetchInstructorDetails();\r\n  }, []);\r\n\r\n  //const phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string().required(\"First Name is required\"),\r\n    //preferred_first_name: Yup.string(),\r\n    last_name: Yup.string().required(\"Last Name is required\"),\r\n    gender_id: Yup.string().required(\"Gender is required\"),\r\n    phone_no: Yup.string().required(\"Phone number is required\").matches(\r\n            /^[0-9\\s\\-]+$/,\r\n            \"Phone number must only contain digits, spaces, or hyphens\"\r\n          ),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    postcode: Yup.string().required(\"Postcode is required\"),\r\n    confirm_model_pswd: Yup.string().required(\"Old Password is required\"),\r\n  });\r\n\r\n\r\n  const validationSchemaPassword = Yup.object().shape({\r\n    old_password: Yup.string().required(\"Old Password is required\"),\r\n    new_password: Yup.string().min(5, \"Password must be at least 6 characters\"),\r\n    confirm_password: Yup.string()\r\n      .oneOf([Yup.ref(\"new_password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm New Password is required\"),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mainContent\">\r\n        <Breadcrumb />\r\n        <div className=\"mainContent__assets\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg={12}>\r\n                {/* Account setting */}\r\n                <div className=\"personalDetailsForm\">\r\n                  <Link onClick={() => navigate(-1)}>&lt; Go back </Link>\r\n                  <h2>Personal Details</h2>\r\n                  <div className=\"personalDetailsForm__wrp\">\r\n\r\n                    <div className=\"personalDetailsForm__top\"> <h4>Personal Info</h4> </div>\r\n\r\n                    <Formik\r\n                      enableReinitialize={true} // Allow Formik to re-initialize with new values\r\n                      initialValues={{\r\n                        first_name: InstructorDetails?.first_name || \"\",\r\n                        preferred_first_name: InstructorDetails?.preferred_first_name || \"\",\r\n                        last_name: InstructorDetails?.last_name || \"\",\r\n                        gender_id: InstructorDetails?.gender_id || \"1\",\r\n                        phone_no: InstructorDetails?.phone_no || \"\",\r\n                        email: InstructorDetails?.email || \"\",\r\n                        postcode: InstructorDetails?.postcode || \"\",\r\n                        confirmation: \"yes\",\r\n                        // popup\r\n                        confirm_model_pswd: InstructorDetails?.confirm_model_pswd || \"\",\r\n                      }}\r\n                      validationSchema={validationSchema}\r\n                      onSubmit={async (values, { setSubmitting }) => {\r\n                      //  console.log(values)\r\n                        setIsLoading(true);\r\n                        try {\r\n                          const updatedData = {\r\n                            ...values,\r\n                            button_type: \"update_changes\",\r\n                          };\r\n                          const response = await axios.post(\r\n                            `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.UPDATE_LEARNER_PERSONAL_DETAILS}`,\r\n                            updatedData,\r\n                            {\r\n                              headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                                \"Content-Type\": \"application/json\",\r\n                              },\r\n                            }\r\n                          );\r\n                         // console.log(response);\r\n                          if(response.data.success){\r\n                            setShowPopup(false);\r\n                            Swal.fire(\r\n                              \"Success!\",\r\n                              `${response.data.message}`,\r\n                              \"success\"\r\n                            );\r\n                            setNewProfileName(values.first_name);\r\n                            sessionStorage.setItem(\"profileName\",values.first_name)\r\n                          }\r\n                          else{\r\n                            setShowPopup(false);\r\n                            Swal.fire(\r\n                              \"Error!\",\r\n                              `${response.data.message}`,\r\n                              \"error\"\r\n                            );\r\n                          }\r\n                          \r\n                        } catch (error) {\r\n                          console.error(\"Error updating details:\", error);\r\n                          Swal.fire(\r\n                            \"Error!\",\r\n                            `${error.response.data.message}`,\r\n                            \"error\"\r\n                          );\r\n                        } finally {\r\n                          setIsLoading(false);\r\n                          setSubmitting(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      {({ errors, touched }) => (\r\n                        <div className=\"PersonalDetailsForm\">\r\n                          <Form className=\"RegistrationForm\">\r\n                            {/* Personal Info Section */}\r\n                            <fieldset className=\"pb-0\">\r\n                              <div className=\"RegistrationForm__group\">\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"first_name\">*First Name </label>\r\n                                  <Field  type=\"text\" name=\"first_name\" id=\"first_name\"/>\r\n                                  {errors.first_name && touched.first_name && (\r\n                                    <div className=\"error\">\r\n                                      {errors.first_name}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"preferred_first_name\"> Preferred First Name </label>\r\n                                  <Field  type=\"text\" name=\"preferred_first_name\" id=\"preferred_first_name\" />\r\n                                  {/* {errors.preferred_first_name && touched.preferred_first_name && (\r\n                                    <div className=\"error\">\r\n                                      {errors.preferred_first_name}\r\n                                    </div>\r\n                                  )} */}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"RegistrationForm__group\">\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"last_name\">*Last Name</label>\r\n                                  <Field  type=\"text\"  name=\"last_name\"  id=\"last_name\" />\r\n                                  {errors.last_name && touched.last_name && (\r\n                                    <div className=\"error\">\r\n                                      {errors.last_name}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"gender_id\">*Gender</label>\r\n                                  <Field as=\"select\" name=\"gender_id\" id=\"gender_id\">\r\n                                    <option disabled>Select Gender</option>\r\n                                    <option value=\"1\">Female</option>\r\n                                    <option value=\"2\">Male</option>\r\n                                    <option value=\"3\">Other</option>\r\n                                  </Field>\r\n                                  {errors.gender && touched.gender && (\r\n                                    <div className=\"error\">{errors.gender_id}</div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"RegistrationForm__group\">\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"phone_no\">*Phone Number</label>\r\n                                  <Field  type=\"text\"  name=\"phone_no\" id=\"phone_no\" />\r\n                                  {errors.phone_no && touched.phone_no && (\r\n                                    <div className=\"error\">\r\n                                      {errors.phone_no}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"email\">*Email</label>\r\n                                  <Field type=\"email\" name=\"email\" id=\"email\" />\r\n                                  {errors.email && touched.email && (\r\n                                    <div className=\"error\">{errors.email}</div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"postcode\">*Postcode</label>\r\n                                <Field  type=\"text\" name=\"postcode\" id=\"postcode\"/>\r\n                                {errors.postcode && touched.postcode && (\r\n                                  <div className=\"error\">{errors.postcode}</div>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-end personalDetailsForm__btnWrapper gap-4 flex-wrap \">\r\n                              {!errors.first_name  && !errors.last_name && !errors.gender &&\r\n                                !errors.phone_no && !errors.email &&  !errors.postcode &&\r\n                              <button className=\"btn btn-teal updateChanges\" onClick={() => setShowPopup(true)}  \r\n                                type=\"button\" // Explicitly set type=\"button\"\r\n                                >\r\n                                Update Changes\r\n                              </button>\r\n                      }\r\n                              </div>\r\n                            </fieldset>\r\n\r\n                            {/* Popup */}\r\n                          {showPopup && (\r\n                            <div className=\"popup\">\r\n                              <Container>\r\n                                <Row>\r\n                                  <Col lg={12}>\r\n                                    <div className=\"popup__wrp personalDetailsForm__wrp\">\r\n                                      <div className=\"personalDetailsForm__top text-center position-relative\">\r\n                                        <h4>Are you sure?</h4>\r\n                                        <button type=\"button\" className=\"popup__close\" onClick={() => setShowPopup(false)}> X</button>\r\n                                      </div>\r\n                                      <div className=\"personalDetailsForm__bottom\">\r\n                                        <div className=\"RegistrationForm__field\">\r\n                                          <label htmlFor=\"confirm_model_pswd\"> Confirm Password to Update Changes </label> \r\n                                          <Field type=\"password\" name=\"confirm_model_pswd\" id=\"confirm_model_pswd\"/>\r\n                                          {errors.confirm_model_pswd &&\r\n                                            touched.confirm_model_pswd && (\r\n                                              <div className=\"error\">\r\n                                                {errors.confirm_model_pswd}\r\n                                              </div>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                          <button  className=\"btn btn-teal\"  type=\"submit\" disabled={isLoading}\r\n                                           // onClick={() => setShowPopup(false)}\r\n                                          > Confirm\r\n                                          </button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Container>\r\n                            </div>\r\n                          )}\r\n                          </Form>\r\n\r\n                          \r\n                        </div>\r\n                      )}\r\n                    </Formik>\r\n\r\n\r\n\r\n\r\n\r\n                    <Formik\r\n                      enableReinitialize={true} // Allow Formik to re-initialize with new values\r\n                      initialValues={{\r\n                       \r\n                        old_password: InstructorDetails?.old_password || \"\",\r\n                        new_password: InstructorDetails?.new_password || \"\",\r\n                        confirm_password: InstructorDetails?.confirm_password || \"\",\r\n                      }}\r\n                      validationSchema={validationSchemaPassword}\r\n                      onSubmit={async (values, { setSubmitting }) => {\r\n                        setIsLoading(true);\r\n                        try {\r\n                          const updatedData = {\r\n                            ...values,\r\n                            button_type: \"change_password\",\r\n                          };\r\n                          const response = await axios.post(\r\n                            `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.UPDATE_LEARNER_PERSONAL_DETAILS}`,\r\n                            updatedData,\r\n                            {\r\n                              headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                                \"Content-Type\": \"application/json\",\r\n                              },\r\n                            }\r\n                          );\r\n                       //   console.log(response);\r\n                          if(response.data.success){\r\n                            Swal.fire(\r\n                              \"Success!\",\r\n                              `${response.data.message}`,\r\n                              \"success\"\r\n                            );\r\n                          }\r\n                          else{\r\n                            Swal.fire(\r\n                              \"Error!\",\r\n                              `${response.data.message}`,\r\n                              \"error\"\r\n                            );\r\n                          }\r\n                          \r\n                        } catch (error) {\r\n                         // console.error(\"Error updating details:\", error.response.data.message);\r\n                          Swal.fire(\r\n                            \"Error!\",\r\n                            `${error.response.data.message}`,\r\n                            \"error\"\r\n                          );\r\n                        } finally {\r\n                          setIsLoading(false);\r\n                          setSubmitting(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      {({ errors, touched }) => (\r\n                        <div className=\"PersonalDetailsForm\">\r\n                          <Form className=\"RegistrationForm\">\r\n                            {/* Personal Info Section */}\r\n                              \r\n                            {/* Change Password Section */}\r\n                            <div className=\"personalDetailsForm__top\">\r\n                              <h4>Change Password</h4>\r\n                            </div>\r\n                            <fieldset className=\"pb-0\">\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"old_password\">   *Old Password  </label>\r\n                                <Field  type=\"password\" name=\"old_password\" id=\"old_password\" />\r\n                                {errors.old_password &&\r\n                                  touched.old_password && (\r\n                                    <div className=\"error\">\r\n                                      {errors.old_password}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"new_password\"> *New Password  </label>\r\n                                <Field type=\"password\" name=\"new_password\" id=\"new_password\"/>\r\n                                {errors.new_password &&\r\n                                  touched.new_password && (\r\n                                    <div className=\"error\">\r\n                                      {errors.new_password}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"confirm_password\"> *Confirm New Password</label>\r\n                                <Field  type=\"password\" name=\"confirm_password\" id=\"confirm_password\"/>\r\n                                {errors.confirm_password &&\r\n                                  touched.confirm_password && (\r\n                                    <div className=\"error\">\r\n                                      {errors.confirm_password}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                              {/* Buttons */}\r\n                            <div className=\"d-flex justify-content-end personalDetailsForm__btnWrapper gap-4 flex-wrap\">\r\n                              <button  type=\"change_password\"  className=\"btn btn-teal\" disabled={isLoading}> Change Password </button>\r\n                              \r\n                            </div>\r\n                            </fieldset>\r\n\r\n                            \r\n                          </Form>\r\n\r\n                          \r\n                        </div>\r\n                      )}\r\n                    </Formik>\r\n\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["LearnerPersonalDetails","showPopup","setShowPopup","useState","enteredOldPassword","setEnteredOldPassword","userData","token","setNewProfileName","useAuth","isLoading","setIsLoading","InstructorDetails","setInstructorDetails","navigate","useNavigate","useEffect","async","InstructorDetailsResponse","axios","get","API_ENDPOINTS","LEARNER_PERSONAL_DETAILS","headers","Authorization","data","success","error","fetchInstructorDetails","validationSchema","Yup","shape","first_name","required","last_name","gender_id","phone_no","matches","email","postcode","confirm_model_pswd","validationSchemaPassword","old_password","new_password","min","confirm_password","oneOf","_jsx","children","_jsxs","className","Breadcrumb","Container","Row","Col","lg","Link","onClick","Formik","enableReinitialize","initialValues","preferred_first_name","confirmation","onSubmit","values","_ref","setSubmitting","updatedData","button_type","response","post","UPDATE_LEARNER_PERSONAL_DETAILS","Swal","message","sessionStorage","setItem","console","_ref2","errors","touched","Form","htmlFor","Field","type","name","id","as","disabled","value","gender","_ref3","_ref4"],"sourceRoot":""}