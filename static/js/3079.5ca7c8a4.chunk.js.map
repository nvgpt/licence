{"version":3,"file":"static/js/3079.5ca7c8a4.chunk.js","mappings":"2KAwEA,QAnEA,SAAqBA,GAAiB,IAAhB,YAACC,GAAYD,EACjC,MAAME,EAAiBC,MAAMC,KAC3B,IAAIC,IAAIJ,EAAYK,KAAIC,GAAW,CAACA,EAAQC,cAAeD,MAAWE,WAGjE,KAACC,IAAQC,EAAAA,EAAAA,KAEhB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,SAEP,GAAtBb,EAAYc,OAAc,mBAE5Bb,EAAeI,KAAI,CAACC,EAASS,KAC3BC,EAAAA,EAAAA,MAAA,OAAaJ,UAAU,oBAAmBC,SAAA,EACxCG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKM,IAAKX,EAAQY,iB,0zQAAuCC,IAAKb,EAAQc,QACtET,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,UACpCF,EAAAA,EAAAA,KAAA,KAAAE,UAAGF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAI,WAAWhB,EAAQC,gBAAgBM,SAAC,yBAGrDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAAE,SAAKP,EAAQiB,cACbZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,EACAF,EAAAA,EAAAA,KAAA,OAAKa,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4Bf,UAC9FF,EAAAA,EAAAA,KAAA,QAAMkB,SAAS,UAAUC,SAAS,UAAUC,EAAE,m8EAAm8EJ,KAAK,eAGp/EhB,EAAAA,EAAAA,KAAA,UAAAE,SAAyB,iBAAhBP,EAAQ0B,OAAyB1B,EAAQ0B,OAAQ,GAAG1B,EAAQ0B,0BAGzErB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,UAC3DG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,EACAG,EAAAA,EAAAA,MAAA,OAAKQ,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4Bf,SAAA,EAC9FF,EAAAA,EAAAA,KAAA,QAAMoB,EAAE,qiEAAqiEJ,KAAK,aACljEhB,EAAAA,EAAAA,KAAA,QAAMoB,EAAE,y9BAAy9BJ,KAAK,gBAIp+BhB,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,MAAU,qBAGtBG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,0CAAyCC,SAAA,EACxDG,EAAAA,EAAAA,MAAA,OAAKQ,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA4Bf,SAAA,EAC5FF,EAAAA,EAAAA,KAAA,QAAMoB,EAAE,wqBAAwqBJ,KAAK,aACrrBhB,EAAAA,EAAAA,KAAA,QAAMoB,EAAE,gVAAgVJ,KAAK,aAC7VhB,EAAAA,EAAAA,KAAA,QAAMoB,EAAE,slBAAslBJ,KAAK,gBAEnmBhB,EAAAA,EAAAA,KAAA,KAAAE,SAC2B,4BAM7BF,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CACLC,GAAa,YAATb,EAAqB,YAAa,gCACtCwB,MAAO,CAAEC,GAAI5B,EAAQC,eAAiBK,UAAU,eAAcC,SAAC,oBA7C3DE,MAoDlB,C,2KC0SA,QAlWA,WAAiC,IAADoB,EAAAC,EAAAC,EAI9B,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAkBC,IAAuBJ,EAAAA,EAAAA,UAAS,IACnDK,GAAWC,EAAAA,EAAAA,MAEXC,GAD2B,QAAdZ,EAAAU,EAASZ,aAAK,IAAAE,GAAdA,EAAgBa,YACF,QAAdZ,EAAAS,EAASZ,aAAK,IAAAG,OAAA,EAAdA,EAAgBa,eAAgB,IAC7CC,EAA6B,QAAjBb,EAAGQ,EAASZ,aAAK,IAAAI,OAAA,EAAdA,EAAgBa,cAE9BC,EAAeC,IAAoBZ,EAAAA,EAAAA,UAAS,KAC5Ca,EAAUC,IAAed,EAAAA,EAAAA,UAAS,UA+CrCe,EAAeA,CAACC,EAAMC,KAC1B,MAAMC,EAAeX,EAAWY,QAAOC,IACnC,IAAIC,EAIAA,EAFS,YAATL,EAEYI,EAAKJ,KAAKM,SAAS,OAASF,EAAKJ,KAAKM,SAAS,MAG/CF,EAAKJ,KAAKM,SAASN,GAInC,MAAMO,GAAYN,GAAOG,EAAKI,KAAKF,SAASL,GAE5C,OAAOI,GAAaE,CAAS,IAGjCnB,EAAoBc,EAAa,GAInCO,EAAAA,EAAAA,YAAU,KACR,MAAMhE,EAAiBC,MAAMC,KAC3B,IAAIC,IAAIuC,EAAiBtC,KAAIC,GAAW,CAACA,EAAQC,cAAeD,MAAWE,UAE7E4C,EAAiBnD,EAAe,GAE/B,CAAC0C,IAIJ,MAAMuB,EAAYC,IAEjB,MAAMC,EAAWD,EAAEE,OAAOC,MAC1B/B,EAAc6B,GACKrB,EAAWY,QAAQY,GAAcA,EAAWf,OAASY,IAEvEb,EAAaa,EAAW3B,EAAW,EAG/B+B,EAAWL,IAEf,MAAMM,EAAYN,EAAEE,OAAOC,MAC3B5B,EAAcyB,EAAEE,OAAOC,OACJvB,EAAWY,QAAQe,GAAcA,EAAWV,OAASS,IAExElB,EAAajB,EAAYmC,EAAU,GAG5BE,EAAWC,IAAgBpC,EAAAA,EAAAA,aAC3BqC,EAASC,IAActC,EAAAA,EAAAA,UAAS,OAChCuC,EAAWC,IAAexC,EAAAA,EAAAA,YA4B3ByC,EAAkB,SAACN,GAA+B,IAApBE,EAAOK,UAAApE,OAAA,QAAAqE,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC5C,IAAKP,EAAW,MAAO,GACvB,MAAMS,EAAQ,IAAIC,KAAKV,GACjBW,EAAMT,EAAU,IAAIQ,KAAKR,GAAWO,EAE5C,GAAIG,MAAMH,IAAUG,MAAMD,IAAQF,EAAQE,EAExC,OADAE,QAAQC,MAAM,+BACP,GAEP,MAAMC,EAAQ,GACRC,EAAc,IAAIN,KAAKD,GAE7B,KAAOO,GAAgBL,GACrBI,EAAME,KAAKD,EAAYE,cAAcC,MAAM,KAAK,IAClDH,EAAYI,QAAQJ,EAAYK,UAAY,GAG5C,OAAON,CACT,EAqCA,OAPFzB,EAAAA,EAAAA,YAAU,KACRrB,EAAoBG,EAAW,GAI/B,CAACA,KAGCpC,EAAAA,EAAAA,KAAAsF,EAAAA,SAAA,CAAApF,UAyBJF,EAAAA,EAAAA,KAAA,OAAAE,UACMF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA8BC,UAE3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAACuF,EAAAA,EAAS,CAAArF,UACRF,EAAAA,EAAAA,KAACwF,EAAAA,EAAG,CAAAtF,UACFF,EAAAA,EAAAA,KAACyF,EAAAA,EAAG,CAACC,GAAI,GAAGxF,UACZF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UAElCF,EAAAA,EAAAA,KAAA,OAAKC,UAAW,wBAAuBsC,EAAe,GAAK,eAAgBrC,UACzEF,EAAAA,EAAAA,KAACuF,EAAAA,EAAS,CAAArF,UACRF,EAAAA,EAAAA,KAACwF,EAAAA,EAAG,CAAAtF,UAKFG,EAAAA,EAAAA,MAACoF,EAAAA,EAAG,CAACC,GAAI,GAAGxF,SAAA,CAUXqC,IACDlC,EAAAA,EAAAA,MAAAiF,EAAAA,SAAA,CAAApF,SAAA,EACCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UAC7BG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,CAAI,6BACqBG,EAAAA,EAAAA,MAAA,QAAAH,SAAA,CAAM,IAAEwC,aAMrC1C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACpCG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,WAASsC,EAAcrC,OAAO,6DAM9BoC,GACDlC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,qDAAoDC,SAAA,EACjEG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iCAAgCC,SAAA,EAC3CG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,UACRG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,eAAcC,SAAA,EAC3BG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO2F,KAAK,QAAQlF,KAAK,aAAac,GAAG,GAAGqE,QAAwB,YAAfjE,EAAyCgC,MAAM,UAAUkC,SAAUtC,KACxHvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAAC,gBAE/CG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO2F,KAAK,QAAQlF,KAAK,aAAac,GAAG,GAAGqE,QAAwB,OAAfjE,EAAoCgC,MAAM,KAAKkC,SAAUtC,KAC9GvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAAC,WAE/CG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO2F,KAAK,QAAQlF,KAAK,aAAac,GAAG,GAAGqE,QAAwB,OAAfjE,EAAoCgC,MAAM,KAAKkC,SAAUtC,KAC9GvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAAC,iBAInDG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,2DAA0DC,SAAA,EACvEF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,SACRG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,eAAcC,SAAA,EAC3BG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,SAAO2F,KAAK,QAAQlF,KAAK,YAAYc,GAAG,GAAGqE,QAAwB,KAAf9D,EAAkC+D,SAAUhC,EAAWF,MAAM,MACjH3D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAAE,iBAEhDG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO2F,KAAK,QAAQlF,KAAK,YAAYc,GAAG,GAAGqE,QAAwB,YAAf9D,EAAyC+D,SAAUhC,EAAWF,MAAM,aACxH3D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAAC,iBAE/CG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,kCAAiCC,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,SAAO2F,KAAK,QAAQlF,KAAK,YAAYc,GAAG,GAAGqE,QAAwB,YAAf9D,EAAyC+D,SAAUhC,EAAWF,MAAM,aACxH3D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAAC,iBAE/CG,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,SAAO2F,KAAK,QAAQlF,KAAK,YAAYc,GAAG,MACxCvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,SAAC,eAE/CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCC,UAChDF,EAAAA,EAAAA,KAAC8F,IAAU,CACXC,SAAU/B,EACTgC,gBAAgB,iBACfH,SAnMFd,IACpB,MAAON,EAAOE,GAAOI,EAErBd,EAAaQ,GACbN,EAAWQ,GAEX,MAAMsB,GAAqBC,EAAAA,EAAAA,IAAO,IAAIxB,KAAKD,GAAQ,cAC7C0B,EAAmBxB,GAAMuB,EAAAA,EAAAA,IAAO,IAAIxB,KAAKC,GAAM,cAAgB,KAC/DyB,GAAiBF,EAAAA,EAAAA,IAAO,IAAIxB,KAAKD,GAAQ,UACzC4B,EAAe1B,GAAMuB,EAAAA,EAAAA,IAAO,IAAIxB,KAAKC,GAAM,UAAY,KAC7DhC,EAAY,GAAGyD,MAAoC,OAAjBC,EAAwB,IAAM,QAAyB,OAAjBA,EAAwBA,EAAe,MAE/G,MAAMC,EAAkBhC,EAAgB2B,EAAoBE,GAG5D9B,EAAaiC,GAGb,MAAMC,EAAiBnE,EAAWY,QAAOF,GAAQA,EAAKiC,MAAMyB,MAAK1D,GAAQwD,EAAgBnD,SAASL,OAGlGb,EAAoBsE,EAAc,EA8KYvC,UAAWA,EAAWE,QAASA,EAASuC,cAAY,EAG5EC,WAAW,SACXC,qBAAqB,EACpBC,QAAS,IAAIlC,KACbmC,kBA1JLzH,IAA8B,IAA7B,UAAEa,EAAS,SAAEC,GAAUd,EAC1C,OACEY,EAAAA,EAAAA,KAAA,OAAK8G,MAAO,CAAEC,QAAS,MAAOC,WAAY,OAAQC,MAAO,QAAS/G,UAChEF,EAAAA,EAAAA,KAAA,OAAKC,UAAWA,EAAUC,UAIxBF,EAAAA,EAAAA,KAAA,OAAK8G,MAAO,CAAEI,SAAU,YAAahH,SAAEA,OAErC,gBAyJIF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,uDAAuDkH,QAlJvEC,KAChBC,YAAW,KACTpF,EAAoBG,EAAW,GAC/B,KACFH,EAAoB,IACpBL,EAAc,IACdG,EAAc,IACdkC,EAAa,MACbE,EAAW,MACXxB,EAAY,SAAS,EAyIuFzC,SAAC,oBAE/F,IACFF,EAAAA,EAAAA,KAACsH,EAAAA,EACD,CACAjI,YAAa2C,4BAyB3B,C","sources":["Components/Instructor/ProfileCards.jsx","Learner-dashboard/Components/TrainerSearchListing.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport profilePlaceholder from \"../../assets/images/img-placeholder.jpg\"; // Fallback image\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nfunction ProfileCards({profileData}) { //this function is for filter out the unique entry from profileData\r\n  const uniqueProfiles = Array.from(\r\n    new Map(profileData.map(profile => [profile.instructor_id, profile])).values()\r\n  );\r\n\r\n   const {role} = useAuth();\r\n\r\n  return (\r\n    <div className=\"profileCard__wrp\">\r\n      {/* {profiles.map((profile) => ( */}\r\n      { profileData.length == 0 ? 'No result Found.' :\r\n      \r\n      uniqueProfiles.map((profile, i) => ( \r\n        <div key={i} className=\"profileCard__card\">\r\n          <div className=\"profileCard__left\">\r\n            <img src={profile.profile_picture || profilePlaceholder} alt={profile.name} />\r\n            <div className=\"profileCard__leftName\">\r\n              <p><Link to={`/search/${profile.instructor_id}`}>VIEW PROFILE</Link></p>\r\n            </div>\r\n          </div>\r\n          <div className=\"profileCard__right\">\r\n            <div className=\"profileCard__desc\">\r\n              <h2>{profile.first_name}</h2>\r\n              <div className=\"price d-flex align-items-center gap-2 w-100\">\r\n                <p>\r\n                <svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.5 0.732056C3.35791 0.732056 0 4.08996 0 8.23206C0 12.3741 3.35791 15.7321 7.5 15.7321C11.6421 15.7321 15 12.3741 15 8.23206C15 4.08996 11.6421 0.732056 7.5 0.732056ZM8.02326 3.69717C8.02326 3.5584 7.96813 3.4253 7.87 3.32717C7.77187 3.22904 7.63878 3.17392 7.5 3.17392C7.36122 3.17392 7.22813 3.22904 7.13 3.32717C7.03187 3.4253 6.97674 3.5584 6.97674 3.69717V4.46671C6.61744 4.52043 6.26512 4.64461 5.96721 4.87066C5.49767 5.22647 5.23256 5.77833 5.23256 6.48787C5.23256 6.83392 5.31209 7.13996 5.47116 7.40601C5.62814 7.66833 5.84372 7.86159 6.07465 8.0088C6.50163 8.28089 7.04651 8.4288 7.49721 8.55159L7.53698 8.56275C8.0386 8.6995 8.43279 8.81182 8.71256 8.98973C8.84163 9.07206 8.92535 9.15647 8.97907 9.24578C9.03 9.33159 9.06977 9.4495 9.06977 9.6274C9.06977 10.053 8.89884 10.3195 8.64837 10.4946C8.37628 10.6851 7.97512 10.789 7.51814 10.773C6.82047 10.7472 6.15419 10.4493 5.82558 10.0111C5.78435 9.95615 5.7327 9.90984 5.67357 9.87483C5.61444 9.83982 5.549 9.8168 5.48098 9.80708C5.41295 9.79736 5.34368 9.80114 5.27711 9.81819C5.21055 9.83525 5.14799 9.86524 5.09302 9.90647C5.03805 9.9477 4.99174 9.99936 4.95673 10.0585C4.92172 10.1176 4.8987 10.1831 4.88898 10.2511C4.87926 10.3191 4.88304 10.3884 4.90009 10.4549C4.91715 10.5215 4.94714 10.5841 4.98837 10.639C5.45581 11.2621 6.21419 11.6332 6.97674 11.7658V12.7669C6.97674 12.9057 7.03187 13.0388 7.13 13.1369C7.22813 13.2351 7.36122 13.2902 7.5 13.2902C7.63878 13.2902 7.77187 13.2351 7.87 13.1369C7.96813 13.0388 8.02326 12.9057 8.02326 12.7669V11.7965C8.4614 11.7441 8.88977 11.6039 9.24837 11.3521C9.77651 10.9823 10.1163 10.3962 10.1163 9.6274C10.1163 9.28136 10.0367 8.97531 9.87767 8.70926C9.72728 8.46322 9.5204 8.25658 9.27419 8.10647C8.84721 7.83438 8.30233 7.68647 7.85163 7.56368L7.81186 7.55252C7.31023 7.41578 6.91605 7.30345 6.63628 7.12554C6.52791 7.06318 6.43642 6.97528 6.36977 6.8695C6.30473 6.75316 6.27333 6.62103 6.27907 6.48787C6.27907 6.0595 6.42558 5.83554 6.5986 5.70508C6.79395 5.55717 7.09814 5.47136 7.48605 5.48182C8.14814 5.49996 8.85419 5.79159 9.22326 6.15996C9.27116 6.21137 9.32893 6.25261 9.39311 6.28121C9.4573 6.3098 9.52659 6.32518 9.59684 6.32642C9.6671 6.32766 9.73689 6.31474 9.80204 6.28842C9.8672 6.2621 9.92638 6.22293 9.97607 6.17324C10.0258 6.12356 10.0649 6.06437 10.0912 5.99922C10.1176 5.93406 10.1305 5.86427 10.1292 5.79402C10.128 5.72376 10.1126 5.65447 10.084 5.59028C10.0554 5.5261 10.0142 5.46833 9.96279 5.42043C9.48698 4.94392 8.75512 4.60903 8.02326 4.48554V3.69717Z\" fill=\"#3155A7\"/>\r\n                </svg>\r\n\r\n                  <strong>{profile.prices=='Not Disclosed'? profile.prices: `${profile.prices} per hour`}</strong>\r\n                </p>\r\n              </div>\r\n              <div className=\"review d-flex align-items-center gap-2 w-100\">\r\n                <p>\r\n                <svg width=\"15\" height=\"16\" viewBox=\"0 0 15 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M5.266 15.2338H4.90087C4.89328 15.2264 4.88654 15.2148 4.87811 15.2124C4.21869 15.017 3.95306 14.6552 3.96993 13.986C3.97752 13.686 3.97077 13.386 3.97077 13.0703C3.51036 13.0703 3.04151 13.0728 2.57267 13.0695C2.35764 13.0678 2.13755 13.0794 1.92758 13.0439C0.787512 12.8486 0.0150975 11.97 0.00919472 10.8367C-0.0017675 8.78861 -0.00429724 6.73966 0.00919472 4.69154C0.0176272 3.40003 1.01856 2.45798 2.33993 2.45715C4.55177 2.45715 6.76276 2.45715 8.9746 2.45715C9.03785 2.45715 9.10193 2.45715 9.16939 2.45715C9.1812 2.76128 9.306 2.98958 9.48898 3.19481C9.68124 3.41075 9.87266 3.62833 10.0531 3.85334C10.102 3.91433 10.1374 4.00664 10.1341 4.08329C10.1223 4.4072 10.0826 4.72946 10.0725 5.05336C10.0455 5.91959 10.8213 6.44625 11.6485 6.12894C11.9462 6.0152 12.2405 5.89157 12.5399 5.78195C12.6039 5.75887 12.6916 5.7564 12.7549 5.77948C13.0188 5.87426 13.2743 5.98965 13.5391 6.08278C13.658 6.12482 13.6926 6.18498 13.6917 6.30614C13.6875 7.7765 13.69 9.24604 13.6875 10.7164C13.6875 10.8779 13.6766 11.0403 13.6563 11.2002C13.5324 12.1711 12.6124 13.0266 11.6106 13.0546C10.5886 13.0827 9.56572 13.0645 8.54286 13.0728C8.45601 13.0728 8.35397 13.0991 8.28567 13.1486C7.73419 13.5459 7.19535 13.9604 6.63881 14.3503C6.19442 14.6626 5.80821 15.064 5.266 15.2322V15.2338ZM6.97442 6.11987C6.10672 6.11987 5.23902 6.11822 4.37047 6.11987C4.07365 6.11987 3.87043 6.2979 3.85525 6.55999C3.83838 6.84434 4.05594 7.04874 4.38649 7.04956C5.27612 7.05203 6.16659 7.05038 7.05621 7.05038C7.86911 7.05038 8.68115 7.04956 9.49404 7.05038C9.6863 7.05038 9.85833 7.00918 9.97048 6.84269C10.0725 6.69104 10.0826 6.52702 9.99493 6.3663C9.90049 6.19322 9.74196 6.1174 9.54379 6.1174C8.68706 6.1174 7.83032 6.1174 6.97358 6.1174L6.97442 6.11987ZM5.71208 9.40428C6.1649 9.40428 6.61773 9.40593 7.07055 9.40428C7.3699 9.40263 7.58324 9.21307 7.5883 8.95097C7.59252 8.68394 7.37412 8.48531 7.06718 8.48448C6.16743 8.48283 5.26769 8.48283 4.3671 8.48448C4.06269 8.48448 3.85693 8.66993 3.85187 8.93861C3.84766 9.21142 4.05847 9.40346 4.37047 9.40428C4.81739 9.40593 5.26516 9.40428 5.71208 9.40428Z\" fill=\"#3155A7\"/>\r\n                <path d=\"M15.0004 2.69155C14.7368 3.0014 14.4688 3.30763 14.212 3.62329C14.1607 3.68642 14.1243 3.78293 14.1281 3.86275C14.1422 4.19945 14.1681 4.53616 14.2001 4.87213C14.2313 5.2023 14.0412 5.34889 13.7279 5.22552C13.4042 5.09781 13.0827 4.96284 12.7553 4.84311C12.6781 4.81481 12.5727 4.81408 12.4962 4.84238C12.1599 4.96429 11.8295 5.10289 11.4962 5.23206C11.2118 5.34235 11.024 5.20085 11.0477 4.90551C11.0767 4.54559 11.1004 4.18494 11.1183 3.82429C11.1212 3.76551 11.0952 3.69295 11.0574 3.64723C10.822 3.36278 10.5778 3.08485 10.3387 2.8033C10.162 2.59431 10.234 2.37444 10.505 2.3055C10.8614 2.2148 11.2215 2.13425 11.5763 2.03919C11.6469 2.02032 11.7241 1.96735 11.7642 1.90785C11.9646 1.61033 12.1525 1.30483 12.347 1.00369C12.5066 0.756965 12.7405 0.757691 12.8993 1.00369C13.0961 1.30919 13.2876 1.61759 13.4896 1.92018C13.5245 1.97243 13.5943 2.01815 13.6566 2.03484C13.9929 2.12482 14.3307 2.21044 14.6708 2.28664C14.8103 2.31784 14.9225 2.37299 15.0004 2.49055V2.6901V2.69155Z\" fill=\"#3155A7\"/>\r\n                </svg>\r\n\r\n                  {/* <strong>{profile.rating}</strong>{profile.reviews} */}\r\n                  <strong>0</strong> (0 Reviews)\r\n                </p>\r\n              </div>\r\n              <div className=\"lessons d-flex align-items-center w-100\">\r\n              <svg width=\"15\" height=\"13\" viewBox=\"0 0 15 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M7.79207 -0.00012207C7.59642 -0.00012207 7.4015 -0.00012207 7.20585 -0.00012207C6.97976 0.0684142 6.74281 0.114105 6.52904 0.20977C4.54644 1.09503 2.56819 1.98814 0.588496 2.87912C0.211687 3.04903 -0.000630379 3.33103 9.44138e-05 3.7451C0.001544 4.15989 0.219658 4.43903 0.594294 4.60823C0.842118 4.7196 1.09067 4.83026 1.33922 4.94163C3.05297 5.71338 4.76673 6.48512 6.48049 7.25616C7.1428 7.55458 7.81019 7.57028 8.47468 7.27186C10.3986 6.40874 12.3189 5.53632 14.2464 4.68105C14.6094 4.5197 14.8899 4.31195 15 3.92287V3.54806C14.8826 3.15612 14.592 2.94908 14.2246 2.79202C13.4167 2.44577 12.6268 2.05882 11.8167 1.71757C10.4725 1.15072 9.19931 0.422518 7.79207 -0.00012207Z\" fill=\"#3155A7\"/>\r\n                <path d=\"M0.753007 5.73535V5.88385C0.753007 6.82051 0.753007 7.75717 0.753007 8.69455C0.753007 8.99725 0.947209 9.20143 1.22909 9.19858C1.5001 9.19572 1.68923 8.9894 1.68923 8.69384C1.68923 7.89139 1.68778 7.08894 1.69141 6.28721C1.69141 6.19297 1.66822 6.14443 1.57474 6.10588C1.303 5.99308 1.03706 5.86529 0.752282 5.73678L0.753007 5.73535Z\" fill=\"#3155A7\"/>\r\n                <path d=\"M2.32367 6.36792C2.32367 7.21962 2.27512 9.02727 2.33816 9.86398C2.39179 10.5765 2.84323 11.0905 3.49613 11.3961C4.42003 11.828 5.39684 12.0907 6.41495 12.2056C8.13233 12.3998 9.77507 12.1357 11.3584 11.4646C12.2171 11.1005 12.6982 10.3973 12.6982 9.47989C12.6982 8.8188 12.6982 7.19463 12.6982 6.53355C12.6982 6.48143 12.6982 6.4286 12.6982 6.35364C12.578 6.40647 12.4751 6.45002 12.3736 6.49642C11.278 6.98903 10.1809 7.47949 9.0874 7.97638C8.01421 8.46327 6.94755 8.45256 5.87727 7.96424C4.73018 7.44094 3.57801 6.92763 2.42802 6.41004C2.39396 6.39505 2.35918 6.38219 2.32367 6.36863V6.36792Z\" fill=\"#3155A7\"/>\r\n                </svg>\r\n                <p>\r\n                  {/* {profile.lessons} */}\r\n                  0 Lessons Completed\r\n                  </p>\r\n\r\n                  \r\n              </div>\r\n              <Link \r\n              to={role !== 'learner' ? '/book-now' :'/learner/make-another-booking'}\r\n              state={{ id: profile.instructor_id }} className=\"btn btn-teal\">Book Now</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileCards;\r\n","import {React, useState, useEffect} from \"react\";\r\nimport { useLocation } from \"react-router-dom\"; // Import useLocation for receiving state\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\"; //date -picker\r\nimport \"react-datepicker/dist/react-datepicker.css\";//date picker\r\nimport { format } from \"date-fns\";//date picker\r\n//import PageTopBanner from \"./PageTopBanner\";\r\n//import HomeFaq from \"./HomeFaq\";\r\n//import WhyChooseUs from \"./WhyChooseUs\";\r\n//import SearchForm from \"./SearchForm\";\r\n//import SecIntro from \"./SecIntro\";\r\n//import DescriptionBlock from \"../../Components/DescriptionBlock\";\r\nimport ProfileCards from \"../../Components/Instructor/ProfileCards\";\r\n\r\nfunction TrainerSearchListing() {\r\n\r\n  \r\n\r\n  const [timeFilter, setTimeFilter] = useState('')\r\n  const [dateFilter, setDateFilter] = useState('')\r\n  const [availableTrainer, setAvailableTrainer] = useState([])\r\n  const location = useLocation(); // Use useLocation to access passed state\r\n  const searchTerm = location.state?.searchTerm || \"\"; // Retrieve the search term or default to an empty string\r\n  const searchData = location.state?.searchResult || [];\r\n  const searchStatus = location.state?.searchStatus;\r\n  //console.log(searchData, searchStatus);\r\n  const [uniqueTrainer, setUniqueTrainer] = useState([])\r\n  const [noOfDays, setNoOfDays] = useState('7 days')\r\n\r\n  const contentData = {\r\n    bottomDesc: [\r\n      \"Find, compare and book driving lessons with the best driving instructors near you.\",\r\n    ],\r\n  };\r\n  const introData = {\r\n    titleStart: \"Your local driving instructors in\",\r\n    highlight: searchTerm,\r\n    titleEnd: \"\",\r\n    theme: \"\",\r\n  };\r\n\r\n// Function to apply both filters\r\n// const applyFilters = (time, date) => {\r\n//     const filteredData = searchData.filter(item => {\r\n//     const timeMatch = time ? (item.time === time || item.time === \"Anytime\") : true;//show all time if Anytime is present \r\n//     const dateMatch = date ? item.days === date : true;\r\n//     return timeMatch && dateMatch;\r\n//   });\r\n\r\n//  // console.log(\"Filtered Data:\", filteredData); // Log the filtered data\r\n//   setAvailableTrainer(filteredData); // Update the state asynchronously\r\n// };\r\n\r\n// const applyFilters = (time, date) => {\r\n//   const filteredData = searchData.filter(item => {\r\n//       let timeMatch;\r\n\r\n//       if (time === 'Anytime') {\r\n//           // Show only entries that contain both 'AM' and 'PM'\r\n//           timeMatch = item.time.includes('AM') && item.time.includes('PM');\r\n//       } else {\r\n//           // Show entries that either exactly match AM/PM or include both AM and PM\r\n//           timeMatch = item.time.includes(time);\r\n//       }\r\n\r\n//       //const dateMatch = date ? item.days === date : true;\r\n//       const dateMatch = date ? item.days.includes(date) : true;\r\n\r\n//       return timeMatch && dateMatch;\r\n//   });\r\n\r\n//   setAvailableTrainer(filteredData);\r\n// };\r\n\r\nconst applyFilters = (time, date) => {\r\n  const filteredData = searchData.filter(item => {\r\n      let timeMatch;\r\n\r\n      if (time === 'Anytime') {\r\n          // Show only entries that contain both 'AM' and 'PM'\r\n          timeMatch = item.time.includes('AM') && item.time.includes('PM');\r\n      } else {\r\n          // Show entries that either exactly match AM/PM or include both AM and PM\r\n          timeMatch = item.time.includes(time);\r\n      }\r\n\r\n      //const dateMatch = date ? item.days === date : true;\r\n      const dateMatch = date ? item.days.includes(date) : true;\r\n\r\n      return timeMatch && dateMatch;\r\n  });\r\n\r\n  setAvailableTrainer(filteredData);\r\n};\r\n\r\n\r\nuseEffect(() => {\r\n  const uniqueProfiles = Array.from(\r\n    new Map(availableTrainer.map(profile => [profile.instructor_id, profile])).values()\r\n  );\r\n  setUniqueTrainer(uniqueProfiles)\r\n // console.log(\"Updated availableTrainer:\", availableTrainer, uniqueTrainer);\r\n}, [availableTrainer]);\r\n\r\n\r\n\r\nconst changeTime=(e)=>{\r\n // console.log(e.target.value, availableTrainer);\r\n const timeValue =e.target.value;\r\n setTimeFilter(timeValue)\r\n const filterTime = searchData.filter( filtertime => filtertime.time === timeValue)\r\n//  setAvailableTrainer(filterTime)\r\n  applyFilters(timeValue, dateFilter); // Pass the updated time and current dateFilter\r\n}\r\n\r\nconst changeDay=(e)=>{\r\n  //console.log(e.target.value)\r\n  const dateValue = e.target.value;\r\n  setDateFilter(e.target.value)\r\n  const filterDate = searchData.filter( filterdate => filterdate.days === dateValue)\r\n // setAvailableTrainer(filterDate)\r\n  applyFilters(timeFilter, dateValue); // Pass the updated date and current timeFilter\r\n}\r\n// datepicker\r\n  const [startDate, setStartDate] = useState();\r\n  const [endDate, setEndDate] = useState(null);\r\n  const [dateRange, setDateRange]= useState()\r\n  const onChangeDate = (dates) => {\r\n    const [start, end] = dates;\r\n    // console.log(dates)\r\n    setStartDate(start);\r\n    setEndDate(end);\r\n    \r\n    const formattedStartDate = format(new Date(start), \"yyyy-MM-dd\");\r\n    const formattedEndDate = end ? format(new Date(end), \"yyyy-MM-dd\") : null;\r\n    const shortStartDate = format(new Date(start), \"dd MMM\");\r\n    const shortEndDate = end ? format(new Date(end), \"dd MMM\") : null;\r\n    setNoOfDays(`${shortStartDate}  ${shortEndDate !== null ? '-' : ''}   ${shortEndDate !== null ? shortEndDate : ''}`)//for display the date range in heading message\r\n   // console.log(getDatesInRange(formattedStartDate, formattedEndDate));\r\n    const calculatedRange = getDatesInRange(formattedStartDate, formattedEndDate);\r\n\r\n    // Set the calculated range\r\n    setDateRange(calculatedRange);\r\n    //console.log( calculatedRange.length)\r\n    //console.log(searchData)\r\n    const matchingDates  = searchData.filter(date => date.dates.some(date => calculatedRange.includes(date)));\r\n\r\n    //console.log(matchingDates );\r\n    setAvailableTrainer(matchingDates)\r\n   // setAvailableTrainer()\r\n\r\n\r\n  };\r\n\r\n  const getDatesInRange = (startDate, endDate = null) => {\r\n    if (!startDate) return [];\r\n    const start = new Date(startDate);\r\n    const end = endDate ? new Date(endDate) : start;\r\n     // Validate that dates are in the correct order\r\n  if (isNaN(start) || isNaN(end) || start > end) {\r\n    console.error(\"Invalid date range provided\");\r\n    return [];\r\n  }\r\n    const dates = [];\r\n    const currentDate = new Date(start); // Create a copy to avoid mutating the original `start`\r\n\r\n    while (currentDate  <= end) {\r\n      dates.push(currentDate.toISOString().split(\"T\")[0]); // Format as YYYY-MM-DD\r\n    currentDate.setDate(currentDate.getDate() + 1); // Increment date\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const MyContainer = ({ className, children }) => {\r\n    return (\r\n      <div style={{ padding: \"0px\", background: \"#fff\", color: \"#fff\" }}>\r\n        <div className={className}>\r\n          {/* <div style={{ background: \"#f0f0f0\" }}>\r\n            What is your favorite day?\r\n          </div> */}\r\n          <div style={{ position: \"relative\" }}>{children}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n// datepicker\r\n//clear filter\r\nconst clearFilter=()=>{\r\n  setTimeout(()=>{ //this function is for clearing the array and put old listing array \r\n    setAvailableTrainer(searchData)\r\n  },300)\r\n  setAvailableTrainer([])\r\n  setTimeFilter('')\r\n  setDateFilter('')\r\n  setStartDate(null)\r\n  setEndDate(null)\r\n  setNoOfDays('7 days')\r\n}\r\n//clear filter\r\nuseEffect(()=>{\r\n  setAvailableTrainer(searchData)\r\n  \r\n // console.log(availableTrainer)\r\n \r\n},[searchData])\r\n\r\n  return (\r\n    <>\r\n      {/* <PageTopBanner>\r\n        <Container>\r\n          <Row>\r\n            <Col lg={12}>\r\n              \r\n              <div className=\"PageBanner__formWrp mt-5\">\r\n                <div className=\"PageBanner__formWrpTop\">\r\n                  <h2>Find your instructor now!</h2>\r\n                </div>\r\n                \r\n                <SearchForm />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </PageTopBanner> */}\r\n\r\n      {/* {searchStatus ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"bg-white\">\r\n          <WhyChooseUs />\r\n        </div>\r\n      )} */}\r\n<div>\r\n      <div className=\"mainContent learnerDashboard\">\r\n       \r\n        <div className=\"mainContent__assets\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg={12}>\r\n              <div className=\"dashboard\">\r\n\r\n      <div className={`bg-grey profileCard ${searchStatus ? \"\" : \"titleCenter\"}`} >\r\n        <Container>\r\n          <Row>\r\n\r\n            \r\n          \r\n\r\n            <Col lg={12}>\r\n            {/* {!searchStatus &&  \r\n             <> <SecIntro\r\n                titleStart={introData.titleStart}\r\n                highlight={introData.highlight}\r\n              />\r\n              <DescriptionBlock content={contentData.bottomDesc} />\r\n              </>\r\n            } */}\r\n\r\n            {searchStatus &&\r\n            <>\r\n             <div className=\"secIntro\">\r\n             <div className=\"secIntro__left\">\r\n               <h2>\r\n               Instructors available in <span> {noOfDays}</span>\r\n               </h2>\r\n             </div>\r\n             \r\n             \r\n           </div>\r\n           <div className=\"Faq__Desc commonDesc\">\r\n            <p>We have {uniqueTrainer.length} available drivers for your selected date and time</p>\r\n            </div>\r\n           </>\r\n            }\r\n\r\n              \r\n              {searchStatus ? \r\n              <div className=\"profileCard__filter d-flex justify-content-between\">\r\n                <div className=\"profileCard__filterLeft d-flex\">\r\n                    <div className=\"profileCard__filterGroup d-flex gap-3 align-items-center\">\r\n                      <strong>Time</strong>\r\n                      <div className=\"d-flex gap-1\">\r\n                        <div className=\"d-flex profileCard__filterRadio\">\r\n                          <input type=\"radio\" name=\"timeFilter\" id=\"\" checked={timeFilter === 'Anytime' ? true : false} value=\"Anytime\" onChange={changeTime}/>\r\n                          <div className=\"profileCard__filterRadioBtn\">Anytime</div>\r\n                        </div>\r\n                        <div className=\"d-flex profileCard__filterRadio\">\r\n                          <input type=\"radio\" name=\"timeFilter\" id=\"\" checked={timeFilter === 'AM' ? true : false} value=\"AM\" onChange={changeTime}/>\r\n                          <div className=\"profileCard__filterRadioBtn\">AM</div>\r\n                        </div>\r\n                        <div className=\"d-flex profileCard__filterRadio\">\r\n                          <input type=\"radio\" name=\"timeFilter\" id=\"\" checked={timeFilter === 'PM' ? true : false} value=\"PM\" onChange={changeTime}/>\r\n                          <div className=\"profileCard__filterRadioBtn\">PM</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"profileCard__filterGroup d-flex gap-3 align-items-center\">\r\n                      <strong>Day</strong>\r\n                      <div className=\"d-flex gap-1\">\r\n                        <div className=\"d-flex profileCard__filterRadio d-none\">\r\n                          <input type=\"radio\" name=\"dayFilter\" id=\"\" checked={dateFilter === '' ? true : false} onChange={changeDay} value=\"\"/>\r\n                          <div className=\"profileCard__filterRadioBtn\" >Everyday</div>\r\n                        </div>\r\n                        <div className=\"d-flex profileCard__filterRadio\">\r\n                          <input type=\"radio\" name=\"dayFilter\" id=\"\" checked={dateFilter === 'Fri-Sun' ? true : false} onChange={changeDay} value=\"Fri-Sun\"/>\r\n                          <div className=\"profileCard__filterRadioBtn\">Fri -Sun</div>\r\n                        </div>\r\n                        <div className=\"d-flex profileCard__filterRadio\">\r\n                          <input type=\"radio\" name=\"dayFilter\" id=\"\" checked={dateFilter === 'Mon-Thu' ? true : false} onChange={changeDay} value=\"Mon-Thu\"/>\r\n                          <div className=\"profileCard__filterRadioBtn\">Mon- Thu</div>\r\n                        </div>\r\n                        <div className=\"d-flex profileCard__filterRadio d-none\">\r\n                          <input type=\"radio\" name=\"dayFilter\" id=\"\" />\r\n                          <div className=\"profileCard__filterRadioBtn\">Custom</div>\r\n                        </div>\r\n                        <div className=\"d-flex profileCard__filterRadio\">\r\n                        <DatePicker \r\n                        selected={startDate}\r\n                         placeholderText=\"Custome ˅\" \r\n                          onChange={onChangeDate} startDate={startDate} endDate={endDate} selectsRange \r\n                         // isClearable \r\n                          \r\n                          dateFormat=\"dd-MMM\"\r\n                          shouldCloseOnSelect={true}\r\n                           minDate={new Date()}\r\n                           calendarContainer={MyContainer}\r\n                          // excludeDates={[addDays(new Date(), 1), addDays(new Date(), 5)]}\r\n                          />\r\n                        </div>\r\n                          \r\n                      </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-blue-outline btn-sm profileCard__filterClear\" onClick={clearFilter}>Clear Filter</button>\r\n              </div>\r\n              : \"\"}\r\n              <ProfileCards \r\n              //  profileData={searchData} \r\n              profileData={availableTrainer} \r\n               />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      {/* {searchStatus ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"bg-white\">\r\n          <HomeFaq />\r\n        </div>\r\n      )} */}\r\n\r\n      </div>\r\n      </Col>\r\n      </Row>\r\n      </Container>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default TrainerSearchListing;\r\n"],"names":["_ref","profileData","uniqueProfiles","Array","from","Map","map","profile","instructor_id","values","role","useAuth","_jsx","className","children","length","i","_jsxs","src","profile_picture","alt","name","Link","to","first_name","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","prices","state","id","_location$state","_location$state2","_location$state3","timeFilter","setTimeFilter","useState","dateFilter","setDateFilter","availableTrainer","setAvailableTrainer","location","useLocation","searchData","searchTerm","searchResult","searchStatus","uniqueTrainer","setUniqueTrainer","noOfDays","setNoOfDays","applyFilters","time","date","filteredData","filter","item","timeMatch","includes","dateMatch","days","useEffect","changeTime","e","timeValue","target","value","filtertime","changeDay","dateValue","filterdate","startDate","setStartDate","endDate","setEndDate","dateRange","setDateRange","getDatesInRange","arguments","undefined","start","Date","end","isNaN","console","error","dates","currentDate","push","toISOString","split","setDate","getDate","_Fragment","Container","Row","Col","lg","type","checked","onChange","DatePicker","selected","placeholderText","formattedStartDate","format","formattedEndDate","shortStartDate","shortEndDate","calculatedRange","matchingDates","some","selectsRange","dateFormat","shouldCloseOnSelect","minDate","calendarContainer","style","padding","background","color","position","onClick","clearFilter","setTimeout","ProfileCards"],"sourceRoot":""}