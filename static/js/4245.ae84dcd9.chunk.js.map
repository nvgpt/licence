{"version":3,"file":"static/js/4245.ae84dcd9.chunk.js","mappings":"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","sources":["Components/GoogleMap.js","Components/Calender/components/TimeSlot.jsx","Components/Calender/utils/dateUtils.js","Components/Calender/components/DateColumn.jsx","Components/Calender/Booking_calender.jsx","Components/Instructor/PDP.jsx","Components/PageTopBanner.jsx"],"sourcesContent":["// old\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nlet googleMapsScriptLoaded = false; // Global flag\r\n\r\nconst MapComponent = ({ locations }) => {\r\n  const mapRef = useRef(null);\r\n  const [map, setMap] = useState(null);\r\n  const [circles, setCircles] = useState([]);\r\n  const googleKey = process.env.REACT_APP_GOOGLE_MAP_KEY;\r\n\r\n  useEffect(() => {\r\n    if (window.google && window.google.maps && mapRef.current) {\r\n        setMap(new window.google.maps.Map(mapRef.current, {\r\n          center: { lat: -26.85, lng: 133.77 },\r\n            zoom: 5,\r\n          }));\r\n      return; // If Google Maps is already loaded, exit early\r\n    }\r\n\r\n    if (googleMapsScriptLoaded) return; // Prevent multiple script load\r\n    // Load Google Maps API script \r\n    const script = document.createElement('script');\r\nscript.src = `https://maps.googleapis.com/maps/api/js?key=${googleKey}&libraries=places&callback=initMap`;\r\nscript.async = true; // Set async attribute\r\n//script.defer = true;\r\n    script.onerror = () => {\r\n        console.log(\"Google Maps API script load error. Check your internet connection and API Key.\")\r\n    }\r\n    script.onload = () => {\r\n      // Initialize map once script is loaded\r\n      setMap(new window.google.maps.Map(mapRef.current, {\r\n        center: { lat: -26.85, lng: 133.77 }, // Default center\r\n        zoom: 5,\r\n      }));\r\n    };\r\n    document.head.appendChild(script);\r\n\r\n    return () => {\r\n      // Clean up script on unmount\r\n      document.head.removeChild(script);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (map && locations && locations.length > 0) {\r\n      const geocoder = window.google && window.google.maps ? new window.google.maps.Geocoder() : {\r\n        geocode: (request, callback) => {\r\n          // You can replace with your own geocoding logic here\r\n          console.error('Geocoding is not implemented. Please replace this with a real geocoding API call.');\r\n          callback([], 'ZERO_RESULTS');\r\n        },\r\n      };\r\n\r\n      // Clear existing circles\r\n      circles.forEach(circle => circle.setMap(null));\r\n      setCircles([]);\r\n\r\n      const newCircles = [];\r\n      const bounds = new window.google.maps.LatLngBounds(); // For auto-zooming\r\n\r\n      locations.forEach((pincode, index) => {\r\n        geocoder.geocode({ address: pincode.toString() }, (results, status) => {\r\n          if (status === 'OK' && results && results[0]) {\r\n            const coords = results[0].geometry.location;\r\n\r\n            const circle = new window.google.maps.Circle({\r\n              strokeColor: '#FF0000',\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 2,\r\n              fillColor: '#FF0000',\r\n              fillOpacity: 0.35,\r\n              map: map,\r\n              center: coords,\r\n              radius: 1000, // Adjust radius as needed\r\n            });\r\n            newCircles.push(circle);\r\n            setCircles(prevCircles => [...prevCircles, circle]);\r\n            bounds.extend(coords);\r\n\r\n             map.fitBounds(bounds);\r\n             map.setZoom(12); // Normal zoom for a single location\r\n                map.setCenter(coords);\r\n\r\n            // if (index === locations.length - 1) { // this loop is for when location are more than 1 then zoom accordingly, but is not working\r\n            //   // Adjust zoom based on the number of locations\r\n            //   if (locations.length === 1) {\r\n            //     map.setZoom(12); // Normal zoom for a single location\r\n            //     map.setCenter(coords);\r\n            //   } else {\r\n            //     map.fitBounds(bounds); // Fit bounds for multiple locations\r\n            //   }\r\n            // }\r\n\r\n\r\n          } else {\r\n            console.error(`Geocode was not successful for ${pincode}:`, status);\r\n            if (status === 'ZERO_RESULTS') {\r\n              console.log(`Could not find location for pincode: ${pincode}`);\r\n            } else {\r\n              console.log(`Geocode was not successful for pincode: ${pincode}. Status: ${status}`);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }, [map, locations]);\r\n\r\n  return (\r\n    <div style={{ height: '400px', width: '100%' }} ref={mapRef} />\r\n  );\r\n};\r\n \r\n\r\nexport default MapComponent;","import React from 'react';\nconst TimeSlot = ({ time, onClick, isDisabled, isAvailable, dateStr }) => {\n  const formattedTime = time.padStart(5, '0');\n  const isCurrentTimeSlot = () => {\n    const now = new Date();\n    const today = now.toISOString().split('T')[0];\n    const currentTime = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}`;\n    return dateStr === today && time === currentTime;\n  };\n  return (\n    <div \n    onClick={isDisabled ? undefined : onClick}\n    className=\"relative border-bottom h-6 transition-colors\"\n    style={{\n      backgroundColor: isAvailable ? '#fff' : '#4ab9ea',\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\n      height:'24px',\n    }}  >\n    {isCurrentTimeSlot() && (\n      <div className=\"position-absolute start-0 w-100 d-flex align-items-center\">\n        <div style={{'height': '0.125rem', 'width': '100%', 'background-color': '#ef4444'}}></div>\n        {/* <Clock className=\"position-absolute end-0 text-danger\" style=\"width: 1rem; height: 1rem;\" /> */}\n      </div>\n    )}\n    <div className=\"opacity-0 hover:opacity-100 position-absolute z-10 bg-dark text-white text-small rounded px-2 py-1 start-50 translate-middle-x translate-middle-y\"\n    style={{'display':'none'}}    >\n    {formattedTime}\n    </div>\n</div>\n  )\n};\nexport default TimeSlot;","export const monthNames = [\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', \n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n];\n\nexport const dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n];\n\nexport const getWeekDates = (date, days) => {\n  const startOfWeek = new Date(date);\n  startOfWeek.setDate(date.getDate() - date.getDay());\n\n  return days.map((_, index) => {\n    const currentDate = new Date(startOfWeek);\n    currentDate.setDate(startOfWeek.getDate() + index);\n    return {\n      date: currentDate.getDate(),\n      month: currentDate.getMonth(),\n      year: currentDate.getFullYear(),\n      fullDate: currentDate\n    };\n  });\n};\n\n\nexport const formatDateToYYYYMMDD = (date) => {\n  return date.toISOString().split('T')[0];\n};\n\n// export const isTimeSlotAvailable = (dateStr, timeSlot, availabilities) => {\n//   return availabilities.some(slot => {\n//     const startTime = slot.availability_start_time.substring(0, 5);\n//     const endTime = slot.availability_end_time.substring(0, 5);\n//     return slot.availability_date === dateStr && \n//            (timeSlot === startTime || timeSlot === endTime);\n//   });\n// };\n\nconst timeToMinutes = (timeStr) => {\n  const [hours, minutes] = timeStr.split(':').map(Number);\n  return hours * 60 + minutes;\n};\n\nexport const isTimeSlotAvailable = (dateStr, timeSlot, availabilities) => {\n  return availabilities.some(slot => {\n    if (slot.availability_date !== dateStr) {\n      return false;\n    }\n\n    const slotMinutes = timeToMinutes(timeSlot);\n    const startMinutes = timeToMinutes(slot.availability_start_time.substring(0, 5));\n    const endMinutes = timeToMinutes(slot.availability_end_time.substring(0, 5));\n\n    return slotMinutes >= startMinutes && slotMinutes <= endMinutes;\n  });\n};","import React from 'react';\nimport TimeSlot from './TimeSlot';\nimport { formatDateToYYYYMMDD, isTimeSlotAvailable } from '../utils/dateUtils';\n\nconst DateColumn = ({ dateObj, timeSlots, isDisabled, onTimeSlotClick, availabilities }) => {\n  const dateStr = formatDateToYYYYMMDD(dateObj.fullDate);\n // console.log(dateObj.fullDate)\n  return (\n  <div\n  className={`border d-grid`}\n  style={{\n    gridTemplateRows: 'repeat(24, 1fr)',\n    backgroundColor: !isDisabled ? '' : '#e2e2e273',// Bootstrap's light gray\n    opacity: !isDisabled ? '' : '0.6',\n    color: !isDisabled ? '' : '#adb5bd', // Bootstrap's muted gray\n    cursor: !isDisabled ? 'pointer' : 'not-allowed',\n  }}\n>\n    {timeSlots.map(time => (\n      <TimeSlot\n        key={time}\n        time={time}\n        onClick={() => onTimeSlotClick(dateObj, time)}\n        isDisabled={isDisabled}\n        isAvailable={isTimeSlotAvailable(dateStr, time, availabilities)}\n          dateStr={dateStr}\n      />\n    ))}\n  </div>\n);\n};\n\nexport default DateColumn;","import React, { useState,useEffect } from 'react';\r\nimport DateColumn from './components/DateColumn';\r\nimport { monthNames, dayNames, getWeekDates } from './utils/dateUtils';\r\n//import { availabilities } from './utils/availabilities';\r\nimport { apiGet } from \"../../utilities/axiosInstance\";\r\nimport API_ENDPOINTS from \"../../utilities/apiEndPoints\";\r\n\r\nfunction CalendarView({trainerID}) {\r\n // console.log(trainerID)\r\n  const [trainerAvail, setTrainerAvail]= useState([])\r\n  const [lessonInterval, setLessonInterval] = useState(15);\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  const [disableBtn, setDisableBtn]=useState(false)\r\n  \r\n  // const timeSlots = Array.from({length: 24}, (_, i) => {\r\n  //   // const hours = Math.floor(i / 2); // Integer division to get the hour\r\n  //   // const minutes = i % 2 === 0 ? '00' : '30'; // '00' for even indices, '30' for odd\r\n  //   // return `${String(hours).padStart(2, '0')}:${minutes}`; // Format as \"HH:mm\"\r\n  //   const hours = i; // Directly use the index for the hour\r\n  // return `${String(hours).padStart(2, '0')}:00`; // Format as \"HH:00\"\r\n  // });\r\n\r\n   // Configure the interval in minutes (15, 30, 45, or 60)\r\n //  const interval = 45; // You can change this to 15, 30, 45, or 60\r\n const interval =lessonInterval;\r\n  \r\n   const timeSlots = (() => {\r\n     const slots = [];\r\n     const totalMinutesInDay = 24 * 60;\r\n     const slotsCount = totalMinutesInDay / interval;\r\n     \r\n     for (let i = 0; i < slotsCount; i++) {\r\n       const totalMinutes = i * interval;\r\n       const hours = Math.floor(totalMinutes / 60);\r\n       const minutes = totalMinutes % 60;\r\n       slots.push(`${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`);\r\n     }\r\n     \r\n     return slots;\r\n   })();\r\n\r\n  const weekDates = getWeekDates(currentDate, days);\r\n  //console.log(weekDates[0].month , weekDates[6].month)\r\n\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n // console.log(today)\r\n\r\n  const navigateWeek = (direction) => {\r\n    const newDate = new Date(currentDate);\r\n    newDate.setDate(currentDate.getDate() + (direction * 7));\r\n    setCurrentDate(newDate);\r\n   // console.log(newDate - today)\r\n   const todayWeekdate=getWeekDates(today, days); // for getting the current month index\r\n   //console.log( weekDates[6].month - todayWeekdate[6].month) \r\n   const difference = Math.abs(weekDates[6].month - todayWeekdate[6].month);\r\n\r\n   if(direction == -1){\r\n    // console.log('direction -ve')\r\n     setDisableBtn(false)\r\n   }\r\n   else if(direction == 1){\r\n    if (difference < 10 &&  difference > 0) {\r\n      setDisableBtn(true)\r\n\r\n      newDate.setDate(currentDate.getDate() - (4 * 7)); // this is for to stay in the current week and dont navigate further\r\n      setCurrentDate(newDate);\r\n\r\n      \r\n    }\r\n   }\r\n\r\n  };\r\n\r\n  const handleTimeSlotClick = (dateObj, time) => {\r\n    const dayName = dayNames[dateObj.fullDate.getDay()];\r\n    const formattedDate = `${dayName}, ${dateObj.date} ${monthNames[dateObj.month]} ${dateObj.year}`;\r\n    const message = `Selected: ${formattedDate} at ${time}`;\r\n  //  console.log(formattedDate, time, dayName, dateObj.date, monthNames[dateObj.month], dateObj.year)\r\n    setSelectedSlot(message);\r\n  };\r\n\r\n  \r\n \r\n\r\n\r\n  const getDateRangeString = () => {\r\n    const firstDate = weekDates[0].date;\r\n    const lastDate = weekDates[6].date;\r\n    const month = monthNames[weekDates[0].month];\r\n    const year = weekDates[0].year;\r\n\r\n  //  console.log(weekDates[0].month) \r\n  //  console.log(weekDates[6].month+1) \r\n\r\n    if (weekDates[0].month !== weekDates[6].month) {\r\n      return `${firstDate} ${monthNames[weekDates[0].month]} - ${lastDate} ${monthNames[weekDates[6].month]} ${year}`;\r\n    }\r\n    \r\n    return `${firstDate} - ${lastDate} ${month} ${year}`;\r\n  };\r\n\r\n  useEffect(()=>{\r\n\r\n    const fetchTrainerAvailabilty = async ()=>{\r\n        try{\r\n          const trainerAvailResponse= await apiGet(`${API_ENDPOINTS.TRAINER_AVAILABILTY}/${trainerID}`);\r\n         // console.log(trainerAvailResponse.data.processedAvailabilities)\r\n\r\n          if(trainerAvailResponse.success){\r\n             //  console.log(instructorPDPResponse.data)\r\n             setTrainerAvail(trainerAvailResponse.data.processedAvailabilities)\r\n             setLessonInterval(trainerAvailResponse.data.lesson_interval)\r\n              \r\n            //   console.log(instructorPDP, instructorLocations, instructorVehicle, instructorProfileDetails, instructorStaticInfo)\r\n          }\r\n        }\r\n        catch(error){\r\n         // console.log('Error fetching in instructor available', error)\r\n        }\r\n    }\r\n    fetchTrainerAvailabilty();\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column \">\r\n  <div className=\"d-flex justify-content-between align-items-center p-4 booking_calenderTopDate\" style={{backgroundColor:'#F4F4F4',marginLeft: 'auto'}}>\r\n    <button \r\n      onClick={() => navigateWeek(-1)}\r\n      className=\"btn btn-secondary prev-week\"\r\n    >\r\n      &lt;\r\n    </button>\r\n    <div className=\"text-center\">\r\n      <h2 className=\"fs-4 fw-bold\">\r\n        {getDateRangeString()}\r\n      </h2>\r\n      {selectedSlot && (\r\n        // <p className=\"small text-muted mt-1\">{selectedSlot}</p>\r\n        <></>\r\n      )}\r\n    </div>\r\n    \r\n    <button \r\n      onClick={() => navigateWeek(1)}\r\n      className=\"btn btn-secondary next-week\"\r\n      disabled={disableBtn}\r\n    >\r\n      &gt;\r\n    </button>\r\n  </div>\r\n\r\n  <div className=\"d-flex week_day_wrapper\">\r\n    <div className=\" empty_Week_day\"></div>\r\n    {weekDates.map((dateObj, index) => (\r\n      <div \r\n        key={index} \r\n        className=\"flex-grow-1 text-center p-2 border-bottom border-top border-end border-start\"\r\n        style={{backgroundColor:'#e2e2e273'}}\r\n      >\r\n        {days[index]} {dateObj.date}\r\n      </div>\r\n    ))}\r\n  </div>\r\n\r\n  <div className=\"d-flex flex-grow-1 timeSlot_wrapper\">\r\n    <div className=\" border-end border-start border-top time_slot_wrapper\">\r\n      {timeSlots.map((time) => (\r\n        <div \r\n          key={time} \r\n          className=\"d-flex align-items-center justify-content-center small border-bottom\"\r\n          style={{ height: '24px' }}\r\n        >\r\n          {time}\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n    <div \r\n      className=\"flex-grow-1 d-grid\"\r\n      style={{ gridTemplateColumns: 'repeat(7, 1fr)' }}\r\n    >\r\n      {weekDates.map((dateObj, index) => (\r\n        <DateColumn\r\n          key={index}\r\n          dateObj={dateObj}\r\n          timeSlots={timeSlots}\r\n          isDisabled={dateObj.fullDate < today}\r\n          onTimeSlotClick={handleTimeSlotClick}\r\n        //  availabilities={availabilities}\r\n        availabilities={trainerAvail}\r\n        />\r\n      ))}\r\n    </div>\r\n  </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default CalendarView;","import React, { useState, useEffect } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport PageTopBanner from \"../PageTopBanner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport placeholderImg from \"../../assets/images/image-placeholder.png\";\r\nimport ratingImg from \"../../assets/images/rating.png\";\r\nimport OtherCardInfo from \"../PDP/OtherCardInfo\"\r\nimport { apiGet } from \"../../utilities/axiosInstance\";\r\nimport API_ENDPOINTS from \"../../utilities/apiEndPoints\";\r\nimport { useParams } from \"react-router\"\r\nimport CalendarView from '../Calender/Booking_calender';\r\nimport MapComponent from '../GoogleMap';\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nfunction PDP() {\r\n  let params = useParams()\r\n  const {role} = useAuth();\r\n // console.log(role)\r\n  //console.log(params.id)\r\n  // popup toggle\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [pricingData, setPricingData] = useState([]);\r\n  const [contentData, setContentData] = useState(null);\r\n  const [error, setError] = useState(null); // State to handle errors\r\n  // instructor related Details\r\n  const [instructorPDP, setInstructorPDP] =useState([])\r\n  const [instructorLocations, setInstructorLocations]= useState([])\r\n  const [instructorVehicle, setInstructorVehicle]= useState({})\r\n  const [instructorProfileDetails, setInstructorProfileDetails] = useState({})\r\n  const [instructorStaticInfo, setInstructorStaticInfo]= useState({})\r\n  const [locations, setLocations]= useState([])\r\n\r\n // const locations=[110080,110062,110002,110001]\r\n\r\n  const openPopup = () => setIsOpen(true);\r\n  const closePopup = () => setIsOpen(false);\r\n\r\n  // Fetch pricing data on component mount\r\n  useEffect(() => {\r\n    const fetchPricingData = async () => {\r\n      try {\r\n        const response = await apiGet(API_ENDPOINTS.PRICING_STRUCTURE);\r\n\r\n        // console.log(\"API Response:\", response);\r\n\r\n        // Simplified conditional check\r\n        if (response.success && response.data && response.data.hours_list) {\r\n          setPricingData(response.data.hours_list);\r\n        } else {\r\n          console.error(\"Unexpected response format:\", response);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching pricing data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPricingData();\r\n\r\n    const fetchInstructorPDP = async ()=>{\r\n    //  const instructorID = params.id;\r\n      \r\n        try{\r\n          const instructorPDPResponse= await apiGet(`${API_ENDPOINTS.INSTRUCTOR_DETAIL}/${params.id}`);\r\n          //console.log(instructorPDPResponse)\r\n\r\n          if(instructorPDPResponse.success){\r\n             //  console.log(instructorPDPResponse.data)\r\n               setInstructorPDP(instructorPDPResponse.data)\r\n               setInstructorLocations(instructorPDPResponse.data.instructor_locations)\r\n               setInstructorVehicle(instructorPDPResponse.data.instructor_vehicle)\r\n               setInstructorProfileDetails(instructorPDPResponse.data.profile_details)\r\n               setInstructorStaticInfo(instructorPDPResponse.data.staticInfo)\r\n               setLocations(instructorPDPResponse.data.instructor_locations.postcode) //set all postcode for location map\r\n                  const updatedLocations = [...locations]; // Copy existing state\r\n\r\n                  instructorPDPResponse.data.instructor_locations.forEach((item) => {\r\n                  if (!updatedLocations.includes(item.postcode)) {\r\n                  updatedLocations.push(item.postcode); // Add if not already included\r\n                  }\r\n                  });\r\n\r\n                  setLocations(updatedLocations); // Update state\r\n                  //console.log(updatedLocations);\r\n          }\r\n        }\r\n        catch(error){\r\n         // console.log('Error fetching in instructor detail', error)\r\n        }\r\n    }\r\n    fetchInstructorPDP();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await apiGet(API_ENDPOINTS.TEST_PACKAGE);\r\n        if (!response || !response.data) {\r\n          throw new Error(\"Invalid response format for testPackage data\");\r\n        }\r\n        const data = response.data[0]; // Assuming it's an array and taking the first item\r\n        setContentData({\r\n          paragraph: data.listing,\r\n          price: `$${data.price}`,\r\n        });\r\n      } catch (err) {\r\n        setError(err.message);\r\n        console.error(\"Error fetching test package data:\", err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <PageTopBanner />\r\n      <PageTopBanner />\r\n      <div className=\"bg-grey pb-80\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <Col lg={12}>\r\n              <div className=\"pdpWrapper d-flex\">\r\n                <div className=\"pdpWrapper__left\">\r\n                  <Link onClick={() => window.history.back()} className=\"btn btn-white backToTop\">\r\n                    &#60; BACK TO SEARCH\r\n                  </Link>\r\n                  <div className=\"pdpWrapper__leftInternal\">\r\n                    <div className=\"d-flex flex-column gap-2\">\r\n                      <Link\r\n                      \r\n                      to={role !== 'learner' ? '/book-now' :'/learner/make-another-booking'}\r\n                      state={{ id: params.id }}\r\n\r\n                      className=\"btn btn-blue\">\r\n                        BOOK ONLINE NOW &gt;\r\n                      </Link>\r\n                      <button className=\"btn btn-teal\" onClick={openPopup}>\r\n                        CHECK AVAILABILITY &gt;\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pdpWrapper__table bg-grey\">\r\n                      <div className=\"pdpWrapper__tableHead\">\r\n                        <h5>Lesson Pricing</h5>\r\n                        <p>This instructor offers 1-2 hour lessons</p>\r\n                      </div>\r\n                      <div className=\"pdpWrapper__tableMid\">\r\n                        {pricingData.length > 0 ? (\r\n                          pricingData.map((pricing, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className=\"pdpWrapper__tableRow d-flex justify-content-between\"\r\n                            >\r\n                              <p>\r\n                                <strong>{pricing.hours}</strong> hours\r\n                              </p>\r\n                              <div className=\"d-flex\">\r\n                                <p>\r\n                                  <strong>{pricing.price}</strong> / hr\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                        ) : (\r\n                          <p>No pricing data available.</p>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"pdpWrapper__tableBottom\">\r\n                        <div className=\"pdpWrapper__tableBottomRow d-flex justify-content-between\">\r\n                          <p>\r\n                            <strong>Test Package</strong>\r\n                          </p>\r\n                          <p>\r\n                            <strong>{contentData?.price || \"00\"} </strong>\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div\r\n                          className=\"pdpWrapper__tableBottomDisclaimer\"\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: contentData?.paragraph || \"\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pdpWrapper__mapWrp d-flex flex-column gap-2\">\r\n                      <div className=\"pdpWrapper__mapWrpIntro d-flex justify-content-between gap-2\">\r\n                        <p>{instructorPDP?.first_name} serves {instructorLocations.length} Perth Suburbs</p>\r\n                        <Link to=\"/\">Full List</Link>\r\n                      </div>\r\n                      {/* <iframe\r\n                        src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d14978.690936842188!2d151.21157145473376!3d-33.86914076668173!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6b12ae665e892fdd%3A0x3133f8d75a1ac251!2sSydney%20Opera%20House!5e1!3m2!1sen!2sin!4v1730171892345!5m2!1sen!2sin\"\r\n                        height=\"300\"\r\n                        allowFullScreen=\"\"\r\n                        loading=\"lazy\"\r\n                        referrerPolicy=\"no-referrer-when-downgrade\"\r\n                      ></iframe> */}\r\n                      <MapComponent locations={locations}/>\r\n                    </div>\r\n                  </div>\r\n                  <OtherCardInfo/>\r\n                </div>\r\n                <div className=\"pdpWrapper__right d-flex flex-column\">\r\n                  <div className=\"pdpWrapper__profile\">\r\n                    <div className=\"pdpWrapper__profileLeft d-flex flex-column\">\r\n                      <div className=\"pdpWrapper__profileImg\">\r\n                        <img src={instructorPDP?.profile_details?.profile_picture || placeholderImg} alt=\"Profile Image\" />{}\r\n                      </div>\r\n                      <div className=\"pdpWrapper__profileCarInfo\">\r\n                        <h5>{instructorPDP?.first_name}’<span style={{textTransform:'lowercase'}}>s</span> Car</h5>\r\n                        <img src={instructorVehicle?.vehicle_image? instructorVehicle.vehicle_image : placeholderImg} alt=\"car\" />\r\n                        <p>{instructorVehicle?.vehicle_name} {instructorVehicle?.vehicle_model} {instructorVehicle?.vehicle_year} ({instructorProfileDetails?.transmission_name || instructorPDP?.transmission_name})</p>\r\n                        {instructorVehicle?.vehicle_no ? <span className=\"pdpWrapper__profileCarInfo__carno\">{instructorVehicle?.vehicle_no}</span> : ''}\r\n                        \r\n                        <span className=\"pdpWrapper__profileCarInfo__ncaprating\">\r\n                          <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M5 8.3747L7.42493 9.90932C7.86901 10.1906 8.41243 9.77481 8.29556 9.24901L7.65281 6.36318L9.79727 4.41892C10.1888 4.0643 9.9784 3.39176 9.4642 3.34896L6.64194 3.09829L5.53757 0.371428C5.33891 -0.123809 4.66109 -0.123809 4.46243 0.371428L3.35806 3.09217L0.535797 3.34285C0.021595 3.38565 -0.18876 4.05819 0.202734 4.4128L2.34719 6.35707L1.70444 9.24289C1.58757 9.7687 2.13099 10.1845 2.57507 9.90321L5 8.3747Z\" fill=\"#FFD53E\"/>\r\n                          </svg> &nbsp;\r\n                          {instructorVehicle?.ancap_rating}-star ANCAP rating</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pdpWrapper__profileRight\">\r\n                      <div className=\"pdpWrapper__profileInfo\">\r\n                        <div className=\"pdpWrapper__profileInfoTop d-flex justify-content-between\">\r\n                          <h2>{instructorPDP?.first_name} {instructorPDP?.last_name} </h2>\r\n                          <div className=\"pdpWrapper__profileRating d-flex gap-2 align-items-center \">\r\n                            <svg\r\n                              width=\"19\"\r\n                              height=\"18\"\r\n                              viewBox=\"0 0 19 18\"\r\n                              fill=\"none\"\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                            >\r\n                              <path\r\n                                d=\"M9.82759 15.0745L14.2703 17.8368C15.084 18.343 16.0796 17.5947 15.8655 16.6482L14.6879 11.4537L18.6167 7.95405C19.334 7.31575 18.9486 6.10517 18.0065 6.02813L12.8358 5.57692L10.8125 0.66857C10.4485 -0.222857 9.20667 -0.222857 8.84269 0.66857L6.81936 5.56591L1.64864 6.01713C0.706557 6.09416 0.321161 7.30474 1.03843 7.94305L4.96732 11.4427L3.78972 16.6372C3.57561 17.5837 4.57122 18.332 5.38483 17.8258L9.82759 15.0745Z\"\r\n                                fill=\"#4AB9EA\"\r\n                              />\r\n                            </svg>\r\n                            <span>0 (0 Reviews)</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"pdpWrapper__profileInfoBottom\">\r\n                          <p>{instructorProfileDetails?.gender_name} - {instructorProfileDetails?.transmission_name || instructorPDP?.transmission_name} Transmission</p>\r\n                          <p>{instructorStaticInfo?.completed_lessons} Lessons Completed</p>\r\n                        </div>\r\n                        <div className=\"pdpWrapper__profileInfoDesc\"\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: instructorProfileDetails.about_your_self || \"No description available.\",\r\n                        }}\r\n                        >\r\n                        </div>\r\n                        <div className=\"pdpWrapper__profileInfoDesc\">\r\n                        <ul>\r\n                        {instructorStaticInfo?.verified_at ? <li> {instructorStaticInfo?.verified_at}</li>: ''}\r\n                            <li> Driving Instructor's Licence</li>\r\n                            {instructorProfileDetails?.driving_expirence ? <li> Instructed for {instructorProfileDetails?.driving_expirence} yr.</li>:''}\r\n                            {instructorProfileDetails?.languages?.length > 0 ? <li>Spoken Language(s) {instructorProfileDetails?.languages?.map((item, i)=>(<span key={i} aria-label={i}>{item + \" \"}</span> ))}</li>:''}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pdpWrapper__review\">\r\n                          <div className=\"pdpWrapper__reviewTitle d-flex gap-2 align-items-center mb-0\">\r\n                            <p>No ratings or reviews available.</p>\r\n                            <div className=\"pdpWrapper__profileRating d-flex gap-2 align-items-center d-none\">\r\n                              <svg\r\n                                width=\"19\"\r\n                                height=\"18\"\r\n                                viewBox=\"0 0 19 18\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                              >\r\n                                <path\r\n                                  d=\"M9.82759 15.0745L14.2703 17.8368C15.084 18.343 16.0796 17.5947 15.8655 16.6482L14.6879 11.4537L18.6167 7.95405C19.334 7.31575 18.9486 6.10517 18.0065 6.02813L12.8358 5.57692L10.8125 0.66857C10.4485 -0.222857 9.20667 -0.222857 8.84269 0.66857L6.81936 5.56591L1.64864 6.01713C0.706557 6.09416 0.321161 7.30474 1.03843 7.94305L4.96732 11.4427L3.78972 16.6372C3.57561 17.5837 4.57122 18.332 5.38483 17.8258L9.82759 15.0745Z\"\r\n                                  fill=\"#4AB9EA\"\r\n                                />\r\n                              </svg>\r\n                              <span>0 (0 Reviews)</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"feedback d-flex flex-column d-none\">\r\n                            <div className=\"feedback__card d-flex flex-column\">\r\n                              <div className=\"feedback__cardTop d-flex gap-2 align-items-center justify-content-between\">\r\n                                <div className=\"d-flex gap-2 align-items-center\">\r\n                                  <h5>Nila Smith</h5>\r\n                                  <span>Posted on 3 Jul 2024</span>\r\n                                </div>\r\n                                <div className=\"feedback__rating ml-auto flex gap-2\">\r\n                                  <img src={ratingImg} alt=\"\" />\r\n                                </div>\r\n                              </div>\r\n                              <p>\r\n                                Max is very patient and an excellent instructor.\r\n                                He gives very insightful tips based on the type\r\n                                of driver you are. He provided great tips to\r\n                                clear the driving test as well. Would highly\r\n                                recommend him for anyone looking for a great\r\n                                instructor. 10 stars for Max!\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"feedback__card d-flex flex-column\">\r\n                              <div className=\"feedback__cardTop d-flex gap-2 align-items-center justify-content-between\">\r\n                                <div className=\"d-flex gap-2 align-items-center\">\r\n                                  <h5>Nila Smith</h5>\r\n                                  <span>Posted on 3 Jul 2024</span>\r\n                                </div>\r\n                                <div className=\"feedback__rating ml-auto flex gap-2\">\r\n                                  <img src={ratingImg} alt=\"\" />\r\n                                </div>\r\n                              </div>\r\n                              <p>\r\n                                Max is very patient and an excellent instructor.\r\n                                He gives very insightful tips based on the type\r\n                                of driver you are. He provided great tips to\r\n                                clear the driving test as well. Would highly\r\n                                recommend him for anyone looking for a great\r\n                                instructor. 10 stars for Max!\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"feedback__card d-flex flex-column\">\r\n                              <div className=\"feedback__cardTop d-flex gap-2 align-items-center justify-content-between\">\r\n                                <div className=\"d-flex gap-2 align-items-center\">\r\n                                  <h5>Nila Smith</h5>\r\n                                  <span>Posted on 3 Jul 2024</span>\r\n                                </div>\r\n                                <div className=\"feedback__rating ml-auto flex gap-2\">\r\n                                  <img src={ratingImg} alt=\"\" />\r\n                                </div>\r\n                              </div>\r\n                              <p>\r\n                                Max is very patient and an excellent instructor.\r\n                                He gives very insightful tips based on the type\r\n                                of driver you are. He provided great tips to\r\n                                clear the driving test as well. Would highly\r\n                                recommend him for anyone looking for a great\r\n                                instructor. 10 stars for Max!\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"popup position-fixed\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <Col lg={12}>\r\n                <div className=\"popup__wrap shadow-lg\">\r\n                  <div className=\"popup__top\">\r\n                    <h2>\r\n                      Find an available time slot to begin booking process.\r\n                    </h2>\r\n                    <button className=\"popup__close\" onClick={closePopup}>\r\n                      <svg\r\n                        width=\"17\"\r\n                        height=\"17\"\r\n                        viewBox=\"0 0 17 17\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M15.5 1L0.999999 15.5\"\r\n                          stroke=\"white\"\r\n                          strokeWidth=\"1.5\"\r\n                          strokeLinecap=\"round\"\r\n                        />\r\n                        <path\r\n                          d=\"M15.5 15.5L1 0.999999\"\r\n                          stroke=\"white\"\r\n                          strokeWidth=\"1.5\"\r\n                          strokeLinecap=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"popup__mid\">\r\n                    <div className=\"d-flex gap-2\">\r\n                      <button className=\"btn btn-teal btn-sm\">Not Available</button>\r\n                      <button className=\"btn btn-blue-outline btn-sm\">Available</button>\r\n                    </div>\r\n                    {/* <div className=\"d-flex gap-2\">\r\n                      <p>Driving lesson duration = 1 hour or 2 hours</p>\r\n                      <p>Driving test package duration = 2.5 hours</p>\r\n                    </div> */}\r\n\r\n                  </div>\r\n                    <div className=\"booking_calender_wrapper\">\r\n                      <CalendarView trainerID={params.id}/>\r\n                    </div>\r\n                    <div className=\"mt-3 mb-3 mx-auto text-center\">\r\n                      <Link to={role !== 'learner' ? '/book-now' :'/learner/make-another-booking'}\r\n                      state={{ id: params.id }}\r\n                      className=\"btn btn-blue \">\r\n                            BOOK WITH <span style={{textTransform:'uppercase'}}>{instructorPDP?.first_name}</span> &gt;\r\n                        </Link>\r\n                      </div>\r\n                </div>\r\n              </Col>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PDP;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction PageTopBanner({ title, children }) {\r\n  return (\r\n    <div className=\"PageTopBanner\">\r\n      <Container>\r\n        <Row>\r\n          <Col lg={12}>\r\n            {/* If title is provided, display it, otherwise render children */}\r\n            {title ? <h1>{title}</h1> : children}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageTopBanner;\r\n"],"names":["_ref","locations","mapRef","useRef","map","setMap","useState","circles","setCircles","useEffect","window","google","maps","current","Map","center","lat","lng","zoom","script","document","createElement","src","async","onerror","console","log","onload","head","appendChild","removeChild","length","geocoder","Geocoder","geocode","request","callback","error","forEach","circle","newCircles","bounds","LatLngBounds","pincode","index","address","toString","results","status","coords","geometry","location","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","push","prevCircles","extend","fitBounds","setZoom","setCenter","_jsx","style","height","width","ref","time","onClick","isDisabled","isAvailable","dateStr","formattedTime","padStart","_jsxs","undefined","className","backgroundColor","cursor","children","isCurrentTimeSlot","now","Date","today","toISOString","split","currentTime","String","getHours","getMinutes","monthNames","dayNames","getWeekDates","date","days","startOfWeek","setDate","getDate","getDay","_","currentDate","month","getMonth","year","getFullYear","fullDate","timeToMinutes","timeStr","hours","minutes","Number","isTimeSlotAvailable","timeSlot","availabilities","some","slot","availability_date","slotMinutes","startMinutes","availability_start_time","substring","endMinutes","availability_end_time","dateObj","timeSlots","onTimeSlotClick","gridTemplateRows","opacity","color","TimeSlot","trainerID","trainerAvail","setTrainerAvail","lessonInterval","setLessonInterval","setCurrentDate","selectedSlot","setSelectedSlot","disableBtn","setDisableBtn","interval","slots","slotsCount","i","totalMinutes","Math","floor","weekDates","setHours","navigateWeek","direction","newDate","todayWeekdate","difference","abs","handleTimeSlotClick","formattedDate","trainerAvailResponse","apiGet","API_ENDPOINTS","TRAINER_AVAILABILTY","success","data","processedAvailabilities","lesson_interval","fetchTrainerAvailabilty","marginLeft","getDateRangeString","firstDate","lastDate","_Fragment","disabled","gridTemplateColumns","DateColumn","_instructorPDP$profil","_instructorProfileDet","_instructorProfileDet2","params","useParams","role","useAuth","isOpen","setIsOpen","pricingData","setPricingData","contentData","setContentData","setError","instructorPDP","setInstructorPDP","instructorLocations","setInstructorLocations","instructorVehicle","setInstructorVehicle","instructorProfileDetails","setInstructorProfileDetails","instructorStaticInfo","setInstructorStaticInfo","setLocations","response","PRICING_STRUCTURE","hours_list","fetchPricingData","instructorPDPResponse","INSTRUCTOR_DETAIL","id","instructor_locations","instructor_vehicle","profile_details","staticInfo","postcode","updatedLocations","item","includes","fetchInstructorPDP","TEST_PACKAGE","Error","paragraph","listing","price","err","message","fetchData","PageTopBanner","Col","lg","Link","history","back","to","state","openPopup","pricing","dangerouslySetInnerHTML","__html","first_name","MapComponent","OtherCardInfo","profile_picture","placeholderImg","alt","textTransform","vehicle_image","vehicle_name","vehicle_model","vehicle_year","transmission_name","vehicle_no","viewBox","fill","xmlns","d","ancap_rating","last_name","gender_name","completed_lessons","about_your_self","verified_at","driving_expirence","languages","ratingImg","closePopup","stroke","strokeWidth","strokeLinecap","CalendarView","title","Container","Row"],"sourceRoot":""}