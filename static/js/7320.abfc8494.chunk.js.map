{"version":3,"file":"static/js/7320.abfc8494.chunk.js","mappings":"mIA2HA,MACA,EAAe,IAA0B,sE,4CC3EzC,MACA,EAAe,IAA0B,kE,2FC9C1B,SAASA,IACtB,MACMC,GADWC,EAAAA,EAAAA,MACaC,SAASC,MAAM,KAAKC,OAAOC,SAGnCL,EAAa,GAGX,yBAApBA,EAAa,IAAiCA,EAAaM,OAAS,IACtEN,EAAa,GAAK,eAClBA,EAAaO,OAIf,MAAMC,EAAcR,EACjBI,QAAOK,GAAuB,eAAZA,IAClBC,KAAI,CAACD,EAASE,IACG,cAAZF,GAAqC,IAAVE,EAEtB,KAEFF,IAERL,OAAOC,SAEJO,EAAoBJ,EAAYA,EAAYF,OAAS,GACrDO,EAAcL,EAAYA,EAAYF,OAAS,GAErD,OACEQ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CACGR,EAAYF,OAAS,IACpBQ,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,wBAAuBH,UAC9BF,EAAAA,EAAAA,KAAA,OAAKM,IAAKC,EAAAA,EAASC,IAAI,WAG1BV,IACCK,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,UAEJC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAI,eAAeP,IAAoBI,SAAA,CAC1CJ,EAAkBW,QAAQ,KAAM,KAAK,UAI3CV,IACCI,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,SAEHH,EAAYU,QAAQ,KAAM,KAAK,WAM5C,C","sources":["assets/images/learnersProfileIco.svg","assets/images/placeholderImg.svg","Trainer/Components/Breadcrumb.jsx"],"sourcesContent":["var _path, _path2, _path3, _g, _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgLearnersProfileIco(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 21,\n    viewBox: \"0 0 17 21\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 14.9448V5.39513C17 5.17794 16.8866 4.97392 16.7103 4.86203L8.79288 0.0839133C8.61022 -0.0279711 8.38977 -0.0279711 8.20711 0.0839133L0.289737 4.86203C0.107077 4.97392 0 5.17136 0 5.39513V14.9448C0 15.162 0.113376 15.366 0.289737 15.4779L8.20711 20.2494C8.38977 20.3613 8.61022 20.3613 8.79288 20.2494L16.7103 15.4779C16.8866 15.366 17 15.1686 17 14.9448Z\",\n    fill: \"#A8EAFF\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.69675 10.7682C5.80513 10.7485 5.91352 10.7354 6.02829 10.7354C6.23869 10.7354 6.44272 10.7748 6.63399 10.8406C7.39271 11.1038 7.89003 11.8538 7.89003 12.6762V13.5906C6.57023 13.3341 5.50547 12.3143 5.14842 10.9854C5.25044 10.9196 5.40346 10.8406 5.58836 10.7814V10.788C5.62661 10.7814 5.65849 10.7748 5.69675 10.7682ZM9.20345 13.4788V12.6762C9.20345 11.8538 9.70076 11.1038 10.4595 10.8406C10.6508 10.7748 10.8548 10.7354 11.0652 10.7354C11.1799 10.7354 11.2883 10.7485 11.3967 10.7682C11.435 10.7748 11.4669 10.7814 11.5051 10.788V10.7814C11.69 10.8406 11.8367 10.9196 11.945 10.9854C11.5944 12.3012 10.536 13.3209 9.22895 13.5841C9.2162 13.5512 9.20982 13.5117 9.20345 13.4788ZM7.55211 10.0182C7.55211 9.45244 7.99842 8.99849 8.54036 8.99849C9.08868 8.99849 9.52861 9.45902 9.52861 10.0182C9.52861 10.584 9.08231 11.038 8.54036 11.038C7.99842 11.038 7.55211 10.584 7.55211 10.0182ZM9.22895 14.8209C10.3638 14.6499 11.3712 14.0578 12.0917 13.2025C12.8122 12.3472 13.2521 11.2354 13.2521 10.0117C13.2521 9.36691 13.131 8.75506 12.9078 8.18927C12.9206 8.18269 12.9269 8.18269 12.9397 8.17611L14.5974 7.22215V13.3735L9.23533 16.8407L9.22895 14.8209ZM8.54674 6.38003C10.281 6.38003 11.7219 7.6761 12.0152 9.38007C11.8112 9.26165 11.5115 9.09059 11.4669 9.07086C10.6253 8.53795 9.63063 8.23532 8.57224 8.23532H8.52761C7.46922 8.23532 6.4746 8.53795 5.63299 9.07086C5.59473 9.09717 5.28869 9.26823 5.08467 9.38665C5.3652 7.68268 6.81251 6.38003 8.54674 6.38003ZM8.27895 1.55103C8.16419 1.55103 8.04942 1.58392 7.94741 1.64313L1.47595 5.49844C1.46958 5.49844 1.46958 5.50502 1.4632 5.50502C1.45045 5.5116 1.44407 5.51818 1.43132 5.52476C1.42495 5.53134 1.41219 5.53792 1.40582 5.5445C1.39944 5.55107 1.38669 5.55765 1.38031 5.56423C1.37394 5.57081 1.36119 5.57739 1.35481 5.59055C1.34844 5.59713 1.34206 5.60371 1.33568 5.61029C1.32931 5.62344 1.31656 5.63002 1.31018 5.64318C1.30381 5.64976 1.29743 5.65634 1.29743 5.66292C1.28468 5.67608 1.2783 5.68924 1.27193 5.70239C1.26555 5.70897 1.26555 5.71555 1.25917 5.71555C1.2528 5.72871 1.24005 5.74187 1.23367 5.75502C1.23367 5.75502 1.23367 5.7616 1.2273 5.7616C1.2273 5.7616 1.22729 5.76818 1.22092 5.76818C1.21454 5.78134 1.20817 5.7945 1.20179 5.81424C1.20179 5.82082 1.19542 5.82739 1.19542 5.83397C1.18904 5.84713 1.18266 5.86029 1.18266 5.87345C1.18266 5.88003 1.17629 5.89319 1.17629 5.89976C1.16991 5.91292 1.16991 5.92608 1.16354 5.93924C1.16354 5.94582 1.15716 5.95898 1.15716 5.96555C1.15716 5.97871 1.15079 5.99187 1.15079 6.00503C1.15079 6.01161 1.15079 6.02477 1.15079 6.03134C1.15079 6.0445 1.15079 6.05766 1.15079 6.07082C1.15079 6.0774 1.15079 6.08398 1.15079 6.09714C1.15079 6.11029 1.15079 6.13003 1.15079 6.14319V6.16293C1.15079 6.17608 1.15716 6.19582 1.15716 6.20898C1.15716 6.21556 1.15716 6.22214 1.15716 6.22214C1.15716 6.23529 1.16354 6.25503 1.16991 6.26819C1.16991 6.27477 1.16991 6.28135 1.17629 6.28793C1.18266 6.30108 1.18266 6.31424 1.18904 6.33398C1.18904 6.34056 1.19542 6.34714 1.19542 6.35372C1.20179 6.36688 1.20817 6.38003 1.21454 6.39319C1.22092 6.39977 1.22092 6.41293 1.2273 6.41951C1.2273 6.42609 1.23367 6.43267 1.23367 6.43924C1.23367 6.44582 1.24005 6.44582 1.24005 6.4524C1.2528 6.47214 1.26555 6.49188 1.2783 6.51161C1.2783 6.51819 1.28468 6.51819 1.28468 6.52477C1.29743 6.54451 1.31656 6.56425 1.33568 6.58398C1.34206 6.59056 1.34844 6.59714 1.35481 6.60372C1.36756 6.61688 1.38032 6.63004 1.39307 6.63662C1.39944 6.64319 1.41219 6.64977 1.41857 6.65635C1.43132 6.66293 1.44407 6.67609 1.4632 6.68267C1.46958 6.68925 1.48233 6.69583 1.4887 6.69583L4.14104 8.20242C4.1538 8.209 4.16017 8.209 4.17292 8.21558C3.95615 8.7748 3.83501 9.38007 3.83501 10.0117C3.83501 12.4591 5.60111 14.492 7.89003 14.8209L7.8964 16.9196L2.48333 13.8275V9.4327C2.48333 9.05112 2.18367 8.7419 1.81387 8.7419C1.44407 8.7419 1.14441 9.05112 1.14441 9.4327V14.2354C1.14441 14.4854 1.2783 14.7157 1.4887 14.8407L8.24707 18.696C8.27258 18.7091 8.2917 18.7223 8.31721 18.7289H8.32358C8.32996 18.7289 8.32996 18.7289 8.33633 18.7355C8.35546 18.742 8.37459 18.7486 8.39372 18.7552C8.40009 18.7552 8.40647 18.7618 8.41285 18.7618C8.43197 18.7683 8.4511 18.7683 8.47023 18.7749C8.4766 18.7749 8.48298 18.7749 8.48935 18.7749C8.51486 18.7749 8.54036 18.7815 8.56586 18.7815C8.58499 18.7815 8.60412 18.7815 8.62325 18.7815C8.62962 18.7815 8.636 18.7815 8.636 18.7815C8.65513 18.7815 8.67425 18.7749 8.69338 18.7749H8.69976C8.71251 18.7749 8.71888 18.7683 8.73164 18.7683C8.73801 18.7683 8.74439 18.7618 8.75076 18.7618C8.75714 18.7618 8.76351 18.7552 8.76989 18.7552C8.78264 18.7486 8.79539 18.7486 8.80177 18.742C8.80177 18.742 8.80815 18.742 8.80815 18.7355C8.81452 18.7355 8.81452 18.7355 8.8209 18.7289C8.83365 18.7223 8.85278 18.7157 8.86553 18.7026C8.8719 18.7026 8.87828 18.696 8.87828 18.696C8.88465 18.696 8.88466 18.6894 8.89103 18.6894C8.89741 18.6894 8.89741 18.6828 8.90378 18.6828L15.5984 14.3538C15.796 14.2288 15.9108 14.0051 15.9108 13.7683V6.05766C15.9108 5.97871 15.8981 5.89319 15.8662 5.81424C15.8598 5.80766 15.8598 5.7945 15.8534 5.78134C15.8534 5.77476 15.847 5.76818 15.847 5.7616C15.8407 5.74845 15.8343 5.73529 15.8279 5.72213C15.8215 5.71555 15.8215 5.70897 15.8152 5.70239C15.8088 5.68924 15.8024 5.68266 15.796 5.6695C15.7897 5.65634 15.7833 5.64976 15.7769 5.6366C15.7705 5.63002 15.7642 5.62345 15.7578 5.61687C15.7514 5.60371 15.7387 5.59713 15.7323 5.58397C15.7259 5.57739 15.7195 5.57081 15.7195 5.56423C15.7068 5.55108 15.7004 5.5445 15.6877 5.53792C15.6813 5.53134 15.6749 5.52476 15.6685 5.52476C15.6558 5.51818 15.6494 5.5116 15.6366 5.49844C15.6303 5.49186 15.6239 5.48529 15.6175 5.48529C15.6048 5.47871 15.5984 5.47213 15.5856 5.46555C15.5793 5.45897 15.5665 5.45239 15.5601 5.45239C15.5538 5.44581 15.541 5.44581 15.5346 5.43923C15.5219 5.43265 15.5155 5.42607 15.5028 5.42607C15.4964 5.41949 15.49 5.41949 15.4773 5.41949C15.4645 5.41292 15.4517 5.41292 15.439 5.40634C15.4326 5.40634 15.4199 5.39976 15.4135 5.39976C15.4007 5.39976 15.388 5.39318 15.3752 5.39318C15.3625 5.39318 15.3561 5.39318 15.3434 5.3866C15.3306 5.3866 15.3242 5.38002 15.3115 5.38002C15.2987 5.38002 15.2796 5.38002 15.2669 5.38002C15.2605 5.38002 15.2541 5.38002 15.2477 5.38002C15.2286 5.38002 15.2158 5.38002 15.1967 5.38002C15.1903 5.38002 15.184 5.38002 15.1776 5.38002C15.1648 5.38002 15.1521 5.3866 15.1393 5.3866C15.0628 5.39976 14.9863 5.42607 14.9162 5.46555L12.2638 6.9853C12.2447 6.99846 12.232 7.00504 12.2128 7.0182C11.3521 5.89319 10.0196 5.16949 8.52123 5.16949C7.01654 5.16949 5.67762 5.89976 4.81688 7.03136C4.79775 7.0182 4.785 7.01162 4.76588 6.99846L3.15279 6.08398L8.27258 3.03131L12.3212 5.24844C12.6464 5.42607 13.0544 5.30107 13.2266 4.95896C13.3987 4.62343 13.2776 4.20237 12.9461 4.02474L8.57224 1.62997C8.4766 1.57734 8.36821 1.55103 8.2662 1.55103H8.27895Z\",\n    fill: \"url(#paint0_linear_526_12047)\"\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_526_12047\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 1,\n    y: 1,\n    width: 15,\n    height: 18\n  }, _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.69675 10.7682C5.80513 10.7485 5.91352 10.7354 6.02829 10.7354C6.23869 10.7354 6.44272 10.7748 6.63399 10.8406C7.39271 11.1038 7.89003 11.8538 7.89003 12.6762V13.5906C6.57023 13.3341 5.50547 12.3143 5.14842 10.9854C5.25044 10.9196 5.40346 10.8406 5.58836 10.7814V10.788C5.62661 10.7814 5.65849 10.7748 5.69675 10.7682ZM9.20345 13.4788V12.6762C9.20345 11.8538 9.70076 11.1038 10.4595 10.8406C10.6508 10.7748 10.8548 10.7354 11.0652 10.7354C11.1799 10.7354 11.2883 10.7485 11.3967 10.7682C11.435 10.7748 11.4669 10.7814 11.5051 10.788V10.7814C11.69 10.8406 11.8367 10.9196 11.945 10.9854C11.5944 12.3012 10.536 13.3209 9.22895 13.5841C9.2162 13.5512 9.20982 13.5117 9.20345 13.4788ZM7.55211 10.0182C7.55211 9.45244 7.99842 8.99849 8.54036 8.99849C9.08868 8.99849 9.52861 9.45902 9.52861 10.0182C9.52861 10.584 9.08231 11.038 8.54036 11.038C7.99842 11.038 7.55211 10.584 7.55211 10.0182ZM9.22895 14.8209C10.3638 14.6499 11.3712 14.0578 12.0917 13.2025C12.8122 12.3472 13.2521 11.2354 13.2521 10.0117C13.2521 9.36691 13.131 8.75506 12.9078 8.18927C12.9206 8.18269 12.9269 8.18269 12.9397 8.17611L14.5974 7.22215V13.3735L9.23533 16.8407L9.22895 14.8209ZM8.54674 6.38003C10.281 6.38003 11.7219 7.6761 12.0152 9.38007C11.8112 9.26165 11.5115 9.09059 11.4669 9.07086C10.6253 8.53795 9.63063 8.23532 8.57224 8.23532H8.52761C7.46922 8.23532 6.4746 8.53795 5.63299 9.07086C5.59473 9.09717 5.28869 9.26823 5.08467 9.38665C5.3652 7.68268 6.81251 6.38003 8.54674 6.38003ZM8.27895 1.55103C8.16419 1.55103 8.04942 1.58392 7.94741 1.64313L1.47595 5.49844C1.46958 5.49844 1.46958 5.50502 1.4632 5.50502C1.45045 5.5116 1.44407 5.51818 1.43132 5.52476C1.42495 5.53134 1.41219 5.53792 1.40582 5.5445C1.39944 5.55107 1.38669 5.55765 1.38031 5.56423C1.37394 5.57081 1.36119 5.57739 1.35481 5.59055C1.34844 5.59713 1.34206 5.60371 1.33568 5.61029C1.32931 5.62344 1.31656 5.63002 1.31018 5.64318C1.30381 5.64976 1.29743 5.65634 1.29743 5.66292C1.28468 5.67608 1.2783 5.68924 1.27193 5.70239C1.26555 5.70897 1.26555 5.71555 1.25917 5.71555C1.2528 5.72871 1.24005 5.74187 1.23367 5.75502C1.23367 5.75502 1.23367 5.7616 1.2273 5.7616C1.2273 5.7616 1.22729 5.76818 1.22092 5.76818C1.21454 5.78134 1.20817 5.7945 1.20179 5.81424C1.20179 5.82082 1.19542 5.82739 1.19542 5.83397C1.18904 5.84713 1.18266 5.86029 1.18266 5.87345C1.18266 5.88003 1.17629 5.89319 1.17629 5.89976C1.16991 5.91292 1.16991 5.92608 1.16354 5.93924C1.16354 5.94582 1.15716 5.95898 1.15716 5.96555C1.15716 5.97871 1.15079 5.99187 1.15079 6.00503C1.15079 6.01161 1.15079 6.02477 1.15079 6.03134C1.15079 6.0445 1.15079 6.05766 1.15079 6.07082C1.15079 6.0774 1.15079 6.08398 1.15079 6.09714C1.15079 6.11029 1.15079 6.13003 1.15079 6.14319V6.16293C1.15079 6.17608 1.15716 6.19582 1.15716 6.20898C1.15716 6.21556 1.15716 6.22214 1.15716 6.22214C1.15716 6.23529 1.16354 6.25503 1.16991 6.26819C1.16991 6.27477 1.16991 6.28135 1.17629 6.28793C1.18266 6.30108 1.18266 6.31424 1.18904 6.33398C1.18904 6.34056 1.19542 6.34714 1.19542 6.35372C1.20179 6.36688 1.20817 6.38003 1.21454 6.39319C1.22092 6.39977 1.22092 6.41293 1.2273 6.41951C1.2273 6.42609 1.23367 6.43267 1.23367 6.43924C1.23367 6.44582 1.24005 6.44582 1.24005 6.4524C1.2528 6.47214 1.26555 6.49188 1.2783 6.51161C1.2783 6.51819 1.28468 6.51819 1.28468 6.52477C1.29743 6.54451 1.31656 6.56425 1.33568 6.58398C1.34206 6.59056 1.34844 6.59714 1.35481 6.60372C1.36756 6.61688 1.38032 6.63004 1.39307 6.63662C1.39944 6.64319 1.41219 6.64977 1.41857 6.65635C1.43132 6.66293 1.44407 6.67609 1.4632 6.68267C1.46958 6.68925 1.48233 6.69583 1.4887 6.69583L4.14104 8.20242C4.1538 8.209 4.16017 8.209 4.17292 8.21558C3.95615 8.7748 3.83501 9.38007 3.83501 10.0117C3.83501 12.4591 5.60111 14.492 7.89003 14.8209L7.8964 16.9196L2.48333 13.8275V9.4327C2.48333 9.05112 2.18367 8.7419 1.81387 8.7419C1.44407 8.7419 1.14441 9.05112 1.14441 9.4327V14.2354C1.14441 14.4854 1.2783 14.7157 1.4887 14.8407L8.24707 18.696C8.27258 18.7091 8.2917 18.7223 8.31721 18.7289H8.32358C8.32996 18.7289 8.32996 18.7289 8.33633 18.7355C8.35546 18.742 8.37459 18.7486 8.39372 18.7552C8.40009 18.7552 8.40647 18.7618 8.41285 18.7618C8.43197 18.7683 8.4511 18.7683 8.47023 18.7749C8.4766 18.7749 8.48298 18.7749 8.48935 18.7749C8.51486 18.7749 8.54036 18.7815 8.56586 18.7815C8.58499 18.7815 8.60412 18.7815 8.62325 18.7815C8.62962 18.7815 8.636 18.7815 8.636 18.7815C8.65513 18.7815 8.67425 18.7749 8.69338 18.7749H8.69976C8.71251 18.7749 8.71888 18.7683 8.73164 18.7683C8.73801 18.7683 8.74439 18.7618 8.75076 18.7618C8.75714 18.7618 8.76351 18.7552 8.76989 18.7552C8.78264 18.7486 8.79539 18.7486 8.80177 18.742C8.80177 18.742 8.80815 18.742 8.80815 18.7355C8.81452 18.7355 8.81452 18.7355 8.8209 18.7289C8.83365 18.7223 8.85278 18.7157 8.86553 18.7026C8.8719 18.7026 8.87828 18.696 8.87828 18.696C8.88465 18.696 8.88466 18.6894 8.89103 18.6894C8.89741 18.6894 8.89741 18.6828 8.90378 18.6828L15.5984 14.3538C15.796 14.2288 15.9108 14.0051 15.9108 13.7683V6.05766C15.9108 5.97871 15.8981 5.89319 15.8662 5.81424C15.8598 5.80766 15.8598 5.7945 15.8534 5.78134C15.8534 5.77476 15.847 5.76818 15.847 5.7616C15.8407 5.74845 15.8343 5.73529 15.8279 5.72213C15.8215 5.71555 15.8215 5.70897 15.8152 5.70239C15.8088 5.68924 15.8024 5.68266 15.796 5.6695C15.7897 5.65634 15.7833 5.64976 15.7769 5.6366C15.7705 5.63002 15.7642 5.62345 15.7578 5.61687C15.7514 5.60371 15.7387 5.59713 15.7323 5.58397C15.7259 5.57739 15.7195 5.57081 15.7195 5.56423C15.7068 5.55108 15.7004 5.5445 15.6877 5.53792C15.6813 5.53134 15.6749 5.52476 15.6685 5.52476C15.6558 5.51818 15.6494 5.5116 15.6366 5.49844C15.6303 5.49186 15.6239 5.48529 15.6175 5.48529C15.6048 5.47871 15.5984 5.47213 15.5856 5.46555C15.5793 5.45897 15.5665 5.45239 15.5601 5.45239C15.5538 5.44581 15.541 5.44581 15.5346 5.43923C15.5219 5.43265 15.5155 5.42607 15.5028 5.42607C15.4964 5.41949 15.49 5.41949 15.4773 5.41949C15.4645 5.41292 15.4517 5.41292 15.439 5.40634C15.4326 5.40634 15.4199 5.39976 15.4135 5.39976C15.4007 5.39976 15.388 5.39318 15.3752 5.39318C15.3625 5.39318 15.3561 5.39318 15.3434 5.3866C15.3306 5.3866 15.3242 5.38002 15.3115 5.38002C15.2987 5.38002 15.2796 5.38002 15.2669 5.38002C15.2605 5.38002 15.2541 5.38002 15.2477 5.38002C15.2286 5.38002 15.2158 5.38002 15.1967 5.38002C15.1903 5.38002 15.184 5.38002 15.1776 5.38002C15.1648 5.38002 15.1521 5.3866 15.1393 5.3866C15.0628 5.39976 14.9863 5.42607 14.9162 5.46555L12.2638 6.9853C12.2447 6.99846 12.232 7.00504 12.2128 7.0182C11.3521 5.89319 10.0196 5.16949 8.52123 5.16949C7.01654 5.16949 5.67762 5.89976 4.81688 7.03136C4.79775 7.0182 4.785 7.01162 4.76588 6.99846L3.15279 6.08398L8.27258 3.03131L12.3212 5.24844C12.6464 5.42607 13.0544 5.30107 13.2266 4.95896C13.3987 4.62343 13.2776 4.20237 12.9461 4.02474L8.57224 1.62997C8.4766 1.57734 8.36821 1.55103 8.2662 1.55103H8.27895Z\",\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_526_12047)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.9299 1.55103H1.14441V18.7881H15.9299V1.55103Z\",\n    fill: \"url(#paint1_linear_526_12047)\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_526_12047\",\n    x1: 1.14359,\n    y1: 10.1679,\n    x2: 15.9292,\n    y2: 10.1679,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2E469A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.00173504,\n    stopColor: \"#2E469A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.5489,\n    stopColor: \"#4CBAEB\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.6118,\n    stopColor: \"#4BB8E9\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.6756,\n    stopColor: \"#49AFE3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.7399,\n    stopColor: \"#45A2D9\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.8046,\n    stopColor: \"#4190CC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.8695,\n    stopColor: \"#3B7BBD\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.9347,\n    stopColor: \"#3463AC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#2E469A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#2E469A\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_526_12047\",\n    x1: 1.14359,\n    y1: 10.1679,\n    x2: 15.9292,\n    y2: 10.1679,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2E469A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.00173504,\n    stopColor: \"#2E469A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.5489,\n    stopColor: \"#4CBAEB\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.6118,\n    stopColor: \"#4BB8E9\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.6756,\n    stopColor: \"#49AFE3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.7399,\n    stopColor: \"#45A2D9\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.8046,\n    stopColor: \"#4190CC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.8695,\n    stopColor: \"#3B7BBD\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.9347,\n    stopColor: \"#3463AC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.999,\n    stopColor: \"#2E469A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#2E469A\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLearnersProfileIco);\nexport default __webpack_public_path__ + \"static/media/learnersProfileIco.4bfe3d8aba54ccc1e49f768b317dd5f3.svg\";\nexport { ForwardRef as ReactComponent };","var _ellipse, _ellipse2, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgPlaceholderImg(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 70,\n    height: 72,\n    viewBox: \"0 0 70 72\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 35,\n    cy: 35.9028,\n    rx: 35,\n    ry: 35.1242,\n    fill: \"black\",\n    fillOpacity: 0.2\n  })), /*#__PURE__*/React.createElement(\"mask\", {\n    id: \"mask0_563_7449\",\n    style: {\n      maskType: \"luminance\"\n    },\n    maskUnits: \"userSpaceOnUse\",\n    x: 0,\n    y: 0,\n    width: 70,\n    height: 72\n  }, _ellipse2 || (_ellipse2 = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 35,\n    cy: 35.9028,\n    rx: 35,\n    ry: 35.1242,\n    fill: \"white\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    mask: \"url(#mask0_563_7449)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M35.6863 7.66565C39.8726 7.66565 43.8874 9.33454 46.8475 12.3052C49.8076 15.2758 51.4706 19.3049 51.4706 23.506C51.4706 27.7071 49.8076 31.7361 46.8475 34.7068C43.8874 37.6774 39.8726 39.3463 35.6863 39.3463C31.5 39.3463 27.4852 37.6774 24.5251 34.7068C21.565 31.7361 19.902 27.7071 19.902 23.506C19.902 19.3049 21.565 15.2758 24.5251 12.3052C27.4852 9.33454 31.5 7.66565 35.6863 7.66565ZM35.6863 43.3064C53.128 43.3064 67.2549 54.355 67.2549 63.1068V71.027H4.11768V63.1068C4.11768 54.355 18.2446 43.3064 35.6863 43.3064Z\",\n    fill: \"#E6E6E6\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlaceholderImg);\nexport default __webpack_public_path__ + \"static/media/placeholderImg.ff52ef0be22bceedde06b99886839af4.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport homeIco from \"../../assets/images/home.svg\";\r\n\r\nexport default function Breadcrumb() {\r\n  const location = useLocation();\r\n  const pathSegments = location.pathname.split(\"/\").filter(Boolean); // Split and clean the path\r\n\r\n  // Determine if it's a 'trainer' path, which should be ignored in the breadcrumb\r\n  const isTrainerPage = pathSegments[0] === \"instructor\";\r\n\r\n  // If it's a 'learner-list-details' page, redirect to 'learner-list'\r\n  if (pathSegments[1] === \"learner-list-details\" && pathSegments.length > 2) {\r\n    pathSegments[1] = \"learner-list\"; // Modify to 'learner-list'\r\n    pathSegments.pop(); // Remove the last segment (id like 1)\r\n  }\r\n\r\n  // If 'trainer' is in the path, skip it and take 'dashboard' instead\r\n  const breadcrumbs = pathSegments\r\n    .filter(segment => segment !== \"instructor\") // Remove 'trainer' from breadcrumbs\r\n    .map((segment, index) => {\r\n      if (segment === \"dashboard\" && index === 0) {\r\n        // Avoid showing 'Dashboard' in breadcrumb if it's the root page\r\n        return null;\r\n      }\r\n      return segment;\r\n    })\r\n    .filter(Boolean); // Filter out any null values (to avoid empty breadcrumb)\r\n\r\n  const secondLastSegment = breadcrumbs[breadcrumbs.length - 2];\r\n  const lastSegment = breadcrumbs[breadcrumbs.length - 1];\r\n\r\n  return (\r\n    <div className=\"breadcrumb\">\r\n      <p>\r\n        {breadcrumbs.length > 0 && (\r\n          <Link to=\"/instructor/dashboard\">\r\n            <img src={homeIco} alt=\"Home\" />\r\n          </Link>\r\n        )}\r\n        {secondLastSegment && (\r\n          <span>\r\n            &gt; &nbsp;\r\n            <Link to={`/instructor/${secondLastSegment}`}>\r\n              {secondLastSegment.replace(/-/g, \" \")} {/* Optional: Replace hyphens with spaces */}\r\n            </Link>\r\n          </span>\r\n        )}\r\n        {lastSegment && (\r\n          <span>\r\n            &gt; &nbsp;\r\n            {lastSegment.replace(/-/g, \" \")} {/* Last segment, no link */}\r\n          </span>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Breadcrumb","pathSegments","useLocation","pathname","split","filter","Boolean","length","pop","breadcrumbs","segment","map","index","secondLastSegment","lastSegment","_jsx","className","children","_jsxs","Link","to","src","homeIco","alt","replace"],"sourceRoot":""}