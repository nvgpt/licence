{"version":3,"file":"static/js/3889.b6bcf29b.chunk.js","mappings":"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","sources":["Trainer/Components/Breadcrumb.jsx","Trainer/Components/accountsetting/PersonalDetails.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport homeIco from \"../../assets/images/home.svg\";\r\n\r\nexport default function Breadcrumb() {\r\n  const location = useLocation();\r\n  const pathSegments = location.pathname.split(\"/\").filter(Boolean); // Split and clean the path\r\n\r\n  // Determine if it's a 'trainer' path, which should be ignored in the breadcrumb\r\n  const isTrainerPage = pathSegments[0] === \"instructor\";\r\n\r\n  // If it's a 'learner-list-details' page, redirect to 'learner-list'\r\n  if (pathSegments[1] === \"learner-list-details\" && pathSegments.length > 2) {\r\n    pathSegments[1] = \"learner-list\"; // Modify to 'learner-list'\r\n    pathSegments.pop(); // Remove the last segment (id like 1)\r\n  }\r\n\r\n  // If 'trainer' is in the path, skip it and take 'dashboard' instead\r\n  const breadcrumbs = pathSegments\r\n    .filter(segment => segment !== \"instructor\") // Remove 'trainer' from breadcrumbs\r\n    .map((segment, index) => {\r\n      if (segment === \"dashboard\" && index === 0) {\r\n        // Avoid showing 'Dashboard' in breadcrumb if it's the root page\r\n        return null;\r\n      }\r\n      return segment;\r\n    })\r\n    .filter(Boolean); // Filter out any null values (to avoid empty breadcrumb)\r\n\r\n  const secondLastSegment = breadcrumbs[breadcrumbs.length - 2];\r\n  const lastSegment = breadcrumbs[breadcrumbs.length - 1];\r\n\r\n  return (\r\n    <div className=\"breadcrumb\">\r\n      <p>\r\n        {breadcrumbs.length > 0 && (\r\n          <Link to=\"/instructor/dashboard\">\r\n            <img src={homeIco} alt=\"Home\" />\r\n          </Link>\r\n        )}\r\n        {secondLastSegment && (\r\n          <span>\r\n            &gt; &nbsp;\r\n            <Link to={`/instructor/${secondLastSegment}`}>\r\n              {secondLastSegment.replace(/-/g, \" \")} {/* Optional: Replace hyphens with spaces */}\r\n            </Link>\r\n          </span>\r\n        )}\r\n        {lastSegment && (\r\n          <span>\r\n            &gt; &nbsp;\r\n            {lastSegment.replace(/-/g, \" \")} {/* Last segment, no link */}\r\n          </span>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport API_ENDPOINTS from \"../../../utilities/apiEndPoints\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\n\r\nexport default function PersonalDetails() {\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [enteredOldPassword, setEnteredOldPassword] = useState(\"\");\r\n  const { userData, token, setNewProfileName } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [InstructorDetails, setInstructorDetails] = useState();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const fetchInstructorDetails = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const InstructorDetailsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.VIEW_PERSONAL_DETAILS}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (InstructorDetailsResponse.data.success) {\r\n          setIsLoading(false);\r\n          // console.log(InstructorDetailsResponse);\r\n          setInstructorDetails(InstructorDetailsResponse.data.data);\r\n        }\r\n      } catch (error) {\r\n       // console.log(\"Error fetching instructor details\", error);\r\n      }\r\n      finally{\r\n        setIsLoading(false)\r\n      }\r\n    };\r\n    fetchInstructorDetails();\r\n  }, []);\r\n\r\n  const phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string().required(\"First Name is required\"),\r\n    last_name: Yup.string().required(\"Last Name is required\"),\r\n    gender_id: Yup.string().required(\"Gender is required\"),\r\n    phone_no: Yup.string()\r\n    .required(\"Phone number is required\")\r\n    .matches(\r\n      /^[0-9\\s\\-]+$/,\r\n      \"Phone number must only contain digits, spaces, or hyphens\"\r\n    ), \r\n    \r\n    // Yup.string().matches(phoneRegExp, 'Phone number is not valid').required(\"Phone Number is required\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    postcode: Yup.string()\r\n    .matches(/^\\d+$/, \"Postcode must be digits only\")\r\n    .required(\"Postcode is required\"),\r\n    confirm_model_pswd: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n\r\n  const validationSchemaPassword = Yup.object().shape({\r\n    old_password: Yup.string().required(\"Old Password is required\"),\r\n    new_password: Yup.string().min(5, \"Password must be at least 6 characters\"),\r\n    confirm_password: Yup.string()\r\n      .oneOf([Yup.ref(\"new_password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm New Password is required\"),\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mainContent\">\r\n        <Breadcrumb />\r\n        <div className=\"mainContent__assets\">\r\n          <Container>\r\n            <Row>\r\n              <Col lg={12}>\r\n                {/* Account setting */}\r\n                <div className=\"personalDetailsForm\">\r\n                  <Link onClick={() => navigate(-1)}>&lt; Go back </Link>\r\n                  <h2>Personal Details</h2>\r\n                  <div className=\"personalDetailsForm__wrp\">\r\n\r\n                    <div className=\"personalDetailsForm__top\"> <h4>Personal Info</h4> </div>\r\n\r\n                    <Formik\r\n                      enableReinitialize={true} // Allow Formik to re-initialize with new values\r\n                      initialValues={{\r\n                        first_name: InstructorDetails?.first_name || \"\",\r\n                        preferred_first_name: InstructorDetails?.preferred_first_name || \"\",\r\n                        last_name: InstructorDetails?.last_name || \"\",\r\n                        gender_id: InstructorDetails?.gender_id || 0,\r\n                        phone_no: InstructorDetails?.phone_no || \"\",\r\n                        email: InstructorDetails?.email || \"\",\r\n                        postcode: InstructorDetails?.postcode || \"\",\r\n                        confirmation: \"yes\",\r\n                        // popup\r\n                        confirm_model_pswd: InstructorDetails?.confirm_model_pswd || \"\",\r\n                      }}\r\n                      validationSchema={validationSchema}\r\n                      onSubmit={async (values, { setSubmitting }) => {\r\n                        setIsLoading(true);\r\n                        try {\r\n                          const updatedData = {\r\n                            ...values,\r\n                            button_type: \"update_changes\",\r\n                          };\r\n                          const response = await axios.post(\r\n                            `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.UPDATE_PERSONAL_DETAILS}`,\r\n                            updatedData,\r\n                            {\r\n                              headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                                \"Content-Type\": \"application/json\",\r\n                              },\r\n                            }\r\n                          );\r\n                          //console.log(response);\r\n                          if(response.data.success){\r\n                            setShowPopup(false);\r\n                            Swal.fire(\r\n                              \"Success!\",\r\n                              `${response.data.message}`,\r\n                              \"success\"\r\n                            );\r\n                            setNewProfileName(values.first_name);\r\n                            sessionStorage.setItem(\"profileName\",values.first_name)\r\n                          }\r\n                          else{\r\n                            setShowPopup(false);\r\n                            Swal.fire(\r\n                              \"Error!\",\r\n                              `${response.data.message}`,\r\n                              \"error\"\r\n                            );\r\n                          }\r\n                          \r\n                        } catch (error) {\r\n                         // console.error(\"Error updating details:\", error);\r\n                          Swal.fire(\r\n                            \"Error!\",\r\n                            `${error.response.data.data.errors}`,\r\n                            \"error\"\r\n                          );\r\n                        } finally {\r\n                          setIsLoading(false);\r\n                          setSubmitting(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      {({ errors, touched }) => (\r\n                        <div className=\"PersonalDetailsForm\">\r\n                          <Form className=\"RegistrationForm\">\r\n                            {/* Personal Info Section */}\r\n                            <fieldset className=\"pb-0\">\r\n                              <div className=\"RegistrationForm__group\">\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"first_name\">*First Name </label>\r\n                                  <Field  type=\"text\" name=\"first_name\" id=\"first_name\"/>\r\n                                  {errors.first_name && touched.first_name && (\r\n                                    <div className=\"error\">\r\n                                      {errors.first_name}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"preferred_first_name\"> Preferred First Name </label>\r\n                                  <Field  type=\"text\" name=\"preferred_first_name\" id=\"preferred_first_name\" />\r\n                                  {errors.preferred_first_name && touched.preferred_first_name && (\r\n                                    <div className=\"error\">\r\n                                      {errors.preferred_first_name}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"RegistrationForm__group\">\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"last_name\">*Last Name</label>\r\n                                  <Field  type=\"text\"  name=\"last_name\"  id=\"last_name\" />\r\n                                  {errors.last_name && touched.last_name && (\r\n                                    <div className=\"error\">\r\n                                      {errors.last_name}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"gender_id\">*Gender</label>\r\n                                  <Field as=\"select\" name=\"gender_id\" id=\"gender_id\">\r\n                                    <option disabled value=\"0\">Select Gender</option>\r\n                                    <option value=\"1\">Female</option>\r\n                                    <option value=\"2\">Male</option>\r\n                                    <option value=\"3\">Other</option>\r\n                                  </Field>\r\n                                  {errors.gender && touched.gender && (\r\n                                    <div className=\"error\">{errors.gender_id}</div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"RegistrationForm__group\">\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"phone_no\">*Phone Number</label>\r\n                                  <Field  type=\"text\"  name=\"phone_no\" id=\"phone_no\" />\r\n                                  {errors.phone_no && touched.phone_no && (\r\n                                    <div className=\"error\">\r\n                                      {errors.phone_no}\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"RegistrationForm__field\">\r\n                                  <label htmlFor=\"email\">*Email</label>\r\n                                  <Field type=\"email\" name=\"email\" id=\"email\" />\r\n                                  {errors.email && touched.email && (\r\n                                    <div className=\"error\">{errors.email}</div>\r\n                                  )}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"postcode\">*Postcode</label>\r\n                                <Field  type=\"text\" name=\"postcode\" id=\"postcode\"/>\r\n                                {errors.postcode && touched.postcode && (\r\n                                  <div className=\"error\">{errors.postcode}</div>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-end personalDetailsForm__btnWrapper gap-4 flex-wrap \">\r\n                              <button className=\"btn btn-teal updateChanges\" onClick={() => setShowPopup(true)}  \r\n                                type=\"button\" // Explicitly set type=\"button\"\r\n                                >\r\n                                Update Changes\r\n                              </button>\r\n                              </div>\r\n                            </fieldset>\r\n\r\n                            {/* Popup */}\r\n                          {showPopup && (\r\n                            <div className=\"popup\">\r\n                              <Container>\r\n                                <Row>\r\n                                  <Col lg={12}>\r\n                                    <div className=\"popup__wrp personalDetailsForm__wrp\">\r\n                                      <div className=\"personalDetailsForm__top text-center position-relative\">\r\n                                        <h4>Are you sure?</h4>\r\n                                        <button type=\"button\" className=\"popup__close\" onClick={() => setShowPopup(false)}> X</button>\r\n                                      </div>\r\n                                      <div className=\"personalDetailsForm__bottom\">\r\n                                        <div className=\"RegistrationForm__field\">\r\n                                          <label htmlFor=\"confirm_model_pswd\"> Confirm Password to Update Changes </label> \r\n                                          <Field type=\"password\" name=\"confirm_model_pswd\" id=\"confirm_model_pswd\"/>\r\n                                          {errors.confirm_model_pswd &&\r\n                                            touched.confirm_model_pswd && (\r\n                                              <div className=\"error\">\r\n                                                {errors.confirm_model_pswd}\r\n                                              </div>\r\n                                            )}\r\n                                        </div>\r\n                                        <div className=\"d-flex justify-content-center\">\r\n                                          <button  className=\"btn btn-teal\"  type=\"submit\" disabled={isLoading}\r\n                                           // onClick={() => setShowPopup(false)}\r\n                                          > Confirm\r\n                                          </button>\r\n                                        </div>\r\n                                      </div>\r\n                                    </div>\r\n                                  </Col>\r\n                                </Row>\r\n                              </Container>\r\n                            </div>\r\n                          )}\r\n                          </Form>\r\n\r\n                          \r\n                        </div>\r\n                      )}\r\n                    </Formik>\r\n\r\n\r\n\r\n\r\n\r\n                    <Formik\r\n                      enableReinitialize={true} // Allow Formik to re-initialize with new values\r\n                      initialValues={{\r\n                       \r\n                        old_password: InstructorDetails?.old_password || \"\",\r\n                        new_password: InstructorDetails?.new_password || \"\",\r\n                        confirm_password: InstructorDetails?.confirm_password || \"\",\r\n                      }}\r\n                      validationSchema={validationSchemaPassword}\r\n                      onSubmit={async (values, { setSubmitting }) => {\r\n                        setIsLoading(true);\r\n                        try {\r\n                          const updatedData = {\r\n                            ...values,\r\n                            button_type: \"change_password\",\r\n                          };\r\n                          const response = await axios.post(\r\n                            `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.UPDATE_PERSONAL_DETAILS}`,\r\n                            updatedData,\r\n                            {\r\n                              headers: {\r\n                                Authorization: `Bearer ${token}`,\r\n                                \"Content-Type\": \"application/json\",\r\n                              },\r\n                            }\r\n                          );\r\n                       //   console.log(response);\r\n                          if(response.data.success){\r\n                            Swal.fire(\r\n                              \"Success!\",\r\n                              `${response.data.message}`,\r\n                              \"success\"\r\n                            );\r\n                          }\r\n                          else{\r\n                            Swal.fire(\r\n                              \"Error!\",\r\n                              `${response.data.message}`,\r\n                              \"error\"\r\n                            );\r\n                          }\r\n                          \r\n                        } catch (error) {\r\n                         // console.error(\"Error updating details:\", error.response.data.message);\r\n                          Swal.fire(\r\n                            \"Error!\",\r\n                            `${error.response.data.message}`,\r\n                            \"error\"\r\n                          );\r\n                        } finally {\r\n                          setIsLoading(false);\r\n                          setSubmitting(false);\r\n                        }\r\n                      }}\r\n                    >\r\n                      {({ errors, touched }) => (\r\n                        <div className=\"PersonalDetailsForm\">\r\n                          <Form className=\"RegistrationForm\">\r\n                            {/* Personal Info Section */}\r\n                              \r\n                            {/* Change Password Section */}\r\n                            <div className=\"personalDetailsForm__top\">\r\n                              <h4>Change Password</h4>\r\n                            </div>\r\n                            <fieldset className=\"pb-0\">\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"old_password\">   *Old Password  </label>\r\n                                <Field  type=\"password\" name=\"old_password\" id=\"old_password\" />\r\n                                {errors.old_password &&\r\n                                  touched.old_password && (\r\n                                    <div className=\"error\">\r\n                                      {errors.old_password}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"new_password\"> *New Password  </label>\r\n                                <Field type=\"password\" name=\"new_password\" id=\"new_password\"/>\r\n                                {errors.new_password &&\r\n                                  touched.new_password && (\r\n                                    <div className=\"error\">\r\n                                      {errors.new_password}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                              <div className=\"RegistrationForm__field\">\r\n                                <label htmlFor=\"confirm_password\"> *Confirm New Password</label>\r\n                                <Field  type=\"password\" name=\"confirm_password\" id=\"confirm_password\"/>\r\n                                {errors.confirm_password &&\r\n                                  touched.confirm_password && (\r\n                                    <div className=\"error\">\r\n                                      {errors.confirm_password}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                              {/* Buttons */}\r\n                            <div className=\"d-flex justify-content-end personalDetailsForm__btnWrapper gap-4 flex-wrap\">\r\n                              <button  type=\"change_password\"  className=\"btn btn-teal\" disabled={isLoading}> Change Password </button>\r\n                              \r\n                            </div>\r\n                            </fieldset>\r\n\r\n                            \r\n                          </Form>\r\n\r\n                          \r\n                        </div>\r\n                      )}\r\n                    </Formik>\r\n\r\n\r\n\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Breadcrumb","pathSegments","useLocation","pathname","split","filter","Boolean","length","pop","breadcrumbs","segment","map","index","secondLastSegment","lastSegment","_jsx","className","children","_jsxs","Link","to","src","homeIco","alt","replace","PersonalDetails","showPopup","setShowPopup","useState","enteredOldPassword","setEnteredOldPassword","userData","token","setNewProfileName","useAuth","isLoading","setIsLoading","InstructorDetails","setInstructorDetails","navigate","useNavigate","useEffect","async","InstructorDetailsResponse","axios","get","API_ENDPOINTS","VIEW_PERSONAL_DETAILS","headers","Authorization","data","success","error","fetchInstructorDetails","validationSchema","Yup","shape","first_name","required","last_name","gender_id","phone_no","matches","email","postcode","confirm_model_pswd","validationSchemaPassword","old_password","new_password","min","confirm_password","oneOf","Container","Row","Col","lg","onClick","Formik","enableReinitialize","initialValues","preferred_first_name","confirmation","onSubmit","values","_ref","setSubmitting","updatedData","button_type","response","post","UPDATE_PERSONAL_DETAILS","Swal","message","sessionStorage","setItem","errors","_ref2","touched","Form","htmlFor","Field","type","name","id","as","disabled","value","gender","_ref3","_ref4"],"sourceRoot":""}