{"version":3,"file":"static/js/3461.92065b16.chunk.js","mappings":"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","sources":["Trainer/Components/Breadcrumb.jsx","Trainer/Components/accountsetting/MyBankingDetails.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport homeIco from \"../../assets/images/home.svg\";\r\n\r\nexport default function Breadcrumb() {\r\n  const location = useLocation();\r\n  const pathSegments = location.pathname.split(\"/\").filter(Boolean); // Split and clean the path\r\n\r\n  // Determine if it's a 'trainer' path, which should be ignored in the breadcrumb\r\n  const isTrainerPage = pathSegments[0] === \"instructor\";\r\n\r\n  // If it's a 'learner-list-details' page, redirect to 'learner-list'\r\n  if (pathSegments[1] === \"learner-list-details\" && pathSegments.length > 2) {\r\n    pathSegments[1] = \"learner-list\"; // Modify to 'learner-list'\r\n    pathSegments.pop(); // Remove the last segment (id like 1)\r\n  }\r\n\r\n  // If 'trainer' is in the path, skip it and take 'dashboard' instead\r\n  const breadcrumbs = pathSegments\r\n    .filter(segment => segment !== \"instructor\") // Remove 'trainer' from breadcrumbs\r\n    .map((segment, index) => {\r\n      if (segment === \"dashboard\" && index === 0) {\r\n        // Avoid showing 'Dashboard' in breadcrumb if it's the root page\r\n        return null;\r\n      }\r\n      return segment;\r\n    })\r\n    .filter(Boolean); // Filter out any null values (to avoid empty breadcrumb)\r\n\r\n  const secondLastSegment = breadcrumbs[breadcrumbs.length - 2];\r\n  const lastSegment = breadcrumbs[breadcrumbs.length - 1];\r\n\r\n  return (\r\n    <div className=\"breadcrumb\">\r\n      <p>\r\n        {breadcrumbs.length > 0 && (\r\n          <Link to=\"/instructor/dashboard\">\r\n            <img src={homeIco} alt=\"Home\" />\r\n          </Link>\r\n        )}\r\n        {secondLastSegment && (\r\n          <span>\r\n            &gt; &nbsp;\r\n            <Link to={`/instructor/${secondLastSegment}`}>\r\n              {secondLastSegment.replace(/-/g, \" \")} {/* Optional: Replace hyphens with spaces */}\r\n            </Link>\r\n          </span>\r\n        )}\r\n        {lastSegment && (\r\n          <span>\r\n            &gt; &nbsp;\r\n            {lastSegment.replace(/-/g, \" \")} {/* Last segment, no link */}\r\n          </span>\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Breadcrumb from \"../Breadcrumb\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field, useFormikContext  } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nimport API_ENDPOINTS from \"../../../utilities/apiEndPoints\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport AutocompleteAddress from \"../../../Components/AutocompleteAddress\";\r\n\r\nexport default function ProfileVehicleDetails() {\r\n  const { userData, token } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [AccountHolderDetails, setAccountHolderDetails] = useState();\r\n  const [addressSuburb, setAddressSuburb] = useState();\r\n  const [state, setState]=useState();\r\n  const [suburb, setSuburb]=useState();\r\n  const [postcode, setPostcode]=useState();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchInstructorDetails = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const InstructorDetailsResponse = await axios.get(\r\n          `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.VIEW_BANKING_DETAILS}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (InstructorDetailsResponse.data.success) {\r\n          setIsLoading(false);\r\n          setAccountHolderDetails(InstructorDetailsResponse.data.data);\r\n          setAddressSuburb(InstructorDetailsResponse.data.data?.billing_address);\r\n          setState(InstructorDetailsResponse.data.data?.state)\r\n          setSuburb(InstructorDetailsResponse.data.data?.suburb)\r\n          setPostcode(InstructorDetailsResponse.data.data?.postcode)\r\n        }\r\n      } catch (error) {\r\n       // console.log(\"Error fetching instructor details\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n        \r\n      }\r\n    };\r\n    fetchInstructorDetails();\r\n  }, []);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    first_name: Yup.string().required(\"First Name is required\"),\r\n    last_name: Yup.string().required(\"Last Name is required\"),\r\n    businessName: Yup.string().required(\"Business Name is required\"),\r\n    abn: Yup.string().required(\"ABN is required\"),\r\n    gst_registration: Yup.string().required(\"GST registration is required\"),\r\n    //billing_address: Yup.required(\"Billing address is required\"),\r\n    //suburb: Yup.string().required(\"Suburb is required\"),\r\n    //post_code: Yup.string().required(\"Post code is required\"),\r\n    //state: Yup.string().required(\"State is required\"),\r\n  });\r\n// console.log(addressSuburb)\r\n// console.log(addressSuburb, state, suburb, postcode)\r\n\r\n// Use useEffect to update billing_address separately\r\n// Component to update billing_address without reinitializing Formik\r\nconst BillingAddressUpdater = ({ addressSuburb }) => {\r\n  const { setFieldValue } = useFormikContext(); // Get Formik instance\r\n\r\n  useEffect(() => {\r\n    if (addressSuburb) {\r\n      setFieldValue(\"billing_address\", addressSuburb);\r\n    }\r\n  }, [addressSuburb, setFieldValue]); // Runs when addressSuburb changes\r\n\r\n  return null; // This component doesn't render anything\r\n};\r\n\r\n  return (\r\n    <div className=\"mainContent\">\r\n      <Breadcrumb />\r\n      <div className=\"mainContent__assets\">\r\n        <Container>\r\n          <Row>\r\n            <Col lg={12}>\r\n              <div className=\"personalDetailsForm\">\r\n                <Link onClick={() => navigate(-1)}>&lt; Go back </Link>\r\n                <h2>My Banking Details</h2>\r\n\r\n                <div className=\"personalDetailsForm__wrp\">\r\n                  <div className=\"personalDetailsForm__top\">\r\n                    <h4>Account Holder Details</h4>\r\n                  </div>\r\n\r\n                  <Formik\r\n                    enableReinitialize={true} // Allow Formik to re-initialize with new values\r\n                    initialValues={{\r\n                      first_name: AccountHolderDetails?.first_name || \"\",\r\n                      last_name: AccountHolderDetails?.last_name || \"\",\r\n                      businessName: AccountHolderDetails?.business_name || \"\",\r\n                      abn: AccountHolderDetails?.abn || \"\",\r\n                      gst_registration:AccountHolderDetails?.bus_reg_gst || \"no\",\r\n                     // billing_address:addressSuburb,\r\n                     billing_address:AccountHolderDetails?.billing_address || \"\",\r\n                      //billing_address: addressSuburb !=='undefined' ?\r\n                       // `${addressSuburb[0]?.long_name} ${addressSuburb[1]?.long_name} ${addressSuburb[2]?.short_name} ${addressSuburb[3]?.long_name} ${addressSuburb[4]?.long_name}` :\r\n                   //   AccountHolderDetails?.billing_address || \"\",\r\n                      //</div></div>suburb:addressSuburb[1]?.long_name || AccountHolderDetails?.suburb || \"\",\r\n                      //</Col>post_code: addressSuburb[5]?.long_name || AccountHolderDetails?.postcode || \"\",\r\n                      //</Row>state: addressSuburb[3]?.long_name || AccountHolderDetails?.state || \"\",\r\n                      account_name: AccountHolderDetails?.account_name || \"\",\r\n                      bsb: AccountHolderDetails?.bsb || \"\",\r\n                      account_number: AccountHolderDetails?.account_number || \"\",\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={async (values, { setSubmitting }) => {\r\n                      setIsLoading(true);\r\n                     //console.log(values.billing_address, addressSuburb)\r\n                      try {\r\n                        const updatedData = {\r\n                          // ...values,\r\n                          business_name: values.businessName,\r\n                          abn: values.abn,\r\n                          billing_address:`${addressSuburb[0]?.long_name} ${addressSuburb[1]?.long_name} ${addressSuburb[2]?.short_name} ${addressSuburb[3]?.long_name} ${addressSuburb[4]?.long_name}`,\r\n                          suburb: addressSuburb?.length > 0? addressSuburb[1]?.long_name : suburb,\r\n                          postcode: addressSuburb?.length > 0? addressSuburb[addressSuburb.length - 1]?.long_name : postcode,\r\n                          state: addressSuburb?.length > 0 ? addressSuburb[3]?.long_name : state,\r\n                          //billing_address: values.billing_address,\r\n                          // suburb: values.suburb,\r\n                          // postcode: values.post_code,\r\n                          // state: values.state,\r\n                          account_name: values.account_name,\r\n                          bsb: values.bsb,\r\n                          account_number: values.account_number,\r\n                          bus_reg_gst: values.gst_registration,\r\n                        };\r\n                        const response = await axios.post(\r\n                          `${process.env.REACT_APP_API_BASE_URL}${API_ENDPOINTS.UPDATE_BANKING_DETAILS}`,\r\n                          updatedData,\r\n                          {\r\n                            headers: {\r\n                              Authorization: `Bearer ${token}`,\r\n                              \"Content-Type\": \"application/json\",\r\n                            },\r\n                          }\r\n                        );\r\n                        //console.log(response);\r\n                        Swal.fire(\r\n                          \"Success!\",\r\n                          \"banking details has been updated.\",\r\n                          \"success\"\r\n                        );\r\n                      } catch (error) {\r\n                        console.error(\"Error updating details:\", error);\r\n                        Swal.fire(\r\n                          \"Error!\",\r\n                          \"An error occurred while updating details. Please try again.\",\r\n                          \"error\"\r\n                        );\r\n                      } finally {\r\n                        setIsLoading(false);\r\n                        setSubmitting(false);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {({ errors, touched }) => (\r\n                      <Form className=\"ProfileForm RegistrationForm\">\r\n                        {/* Auto-update billing_address when addressSuburb changes */}\r\n          <BillingAddressUpdater addressSuburb={addressSuburb} />\r\n                        {/* My Profile Section */}\r\n                        <fieldset>\r\n                          <Row>\r\n                            <Col md={6}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"first_name\">* First Name</label>\r\n                                <Field\r\n                                  type=\"text\"\r\n                                  name=\"first_name\"\r\n                                  id=\"first_name\"\r\n                                  className=\"form-control\"\r\n                                  disabled\r\n                                ></Field>\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"last_name\">* Last Name</label>\r\n                                <Field\r\n                                  type=\"text\"\r\n                                  name=\"last_name\"\r\n                                  id=\"last_name\"\r\n                                  className=\"form-control\"\r\n                                  disabled\r\n                                ></Field>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </fieldset>\r\n\r\n                        {/* My Vehicle Section */}\r\n                        <div className=\"personalDetailsForm__top\">\r\n                          <h4>Billing Info</h4>\r\n                        </div>\r\n                        <fieldset>\r\n                          <Row>\r\n                            <Col md={6}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"businessName\">\r\n                                  {\" \"}*Business Name{\" \"}</label>\r\n                                <Field type=\"text\" name=\"businessName\" id=\"businessName\" className=\"form-control\" ></Field>\r\n                                {errors.businessName && touched.businessName && ( <div className=\"error\"> {errors.businessName} </div> )}\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={6}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"abn\">*ABN</label>\r\n                                <Field type=\"text\" name=\"abn\" id=\"abn\" className=\"form-control\"/>\r\n                                {errors.abn && touched.abn && (<div className=\"error\">{errors.abn}</div>)}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col md={12}>\r\n                              <label for=\"businessName\">\r\n                                Is your business regsitered for GST?\r\n                              </label>\r\n                              <div className=\"ProfileForm__group d-flex gap-3\">\r\n                                <div className=\"ProfileForm__checkboxWrp\">\r\n                                  <Field type=\"radio\" name=\"gst_registration\" id=\"gst_registration_yes\" value=\"yes\"/>\r\n                                  <span></span><label htmlFor=\"gst_registration_yes\">{\" \"}Yes{\" \"}</label>\r\n                                </div>\r\n                                <div className=\"ProfileForm__checkboxWrp\">\r\n                                  <Field type=\"radio\" name=\"gst_registration\" id=\"gst_registration_no\" value=\"no\"/>\r\n                                  <span></span><label htmlFor=\"gst_registration_no\">{\" \"}No{\" \"}</label>\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col md={12}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"billing_address\">{\" \"}* Billing Address{\" \"}</label>\r\n                                {/* <Field type=\"text\" name=\"billing_address\" id=\"billing_address\"  className=\"form-control\" /> */}\r\n                                {<AutocompleteAddress setAddressSuburb={setAddressSuburb} billingAddrs={ AccountHolderDetails?.billing_address} /> }\r\n                                {errors.billing_address && touched.billing_address && ( <div className=\"error\"> {errors.billing_address}</div> )}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                          <Row>\r\n                            <Col md={4}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"suburb\">*Suburb</label>\r\n                                 \r\n                                      <input type=\"text\" value={Array.isArray(addressSuburb) ? addressSuburb[1]?.long_name : suburb} className=\"form-control\" disabled/>\r\n                                \r\n                                {/* <Field type=\"text\" name=\"suburb\" id=\"suburb\" className=\"form-control\" disabled></Field>\r\n                                {errors.suburb && touched.suburb && ( <div className=\"error\">{errors.suburb}</div>)} */}\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"post_code\">*Postcode</label>\r\n                                 \r\n                                      <input type=\"text\" value={Array.isArray(addressSuburb) ? addressSuburb[addressSuburb.length -1 ]?.long_name : postcode} className=\"form-control\" disabled/>\r\n                                  \r\n                                {/* <Field type=\"text\" name=\"post_code\" id=\"post_code\" className=\"form-control\" disabled></Field>\r\n                                {errors.post_code && touched.post_code && ( <div className=\"error\"> {errors.post_code} </div>)} */}\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"state\">*State</label>\r\n                                \r\n                                      <input type=\"text\" value={Array.isArray(addressSuburb) ? addressSuburb[3]?.long_name : state} className=\"form-control\" disabled/>\r\n                                 \r\n                                {/* <Field type=\"text\" name=\"state\" id=\"state\" className=\"form-control\" disabled ></Field>\r\n                                {errors.state && touched.state && ( <div className=\"error\">{errors.state}</div>)} */}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </fieldset>\r\n\r\n                        {/* Notification Settings Section */}\r\n                        <div className=\"personalDetailsForm__top\">\r\n                          <h4>Bank Account</h4>\r\n                        </div>\r\n                        <fieldset>\r\n                          <Row>\r\n                            <Col md={4}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"abn\">Account Name</label>\r\n                                <Field\r\n                                  type=\"text\"\r\n                                  name=\"account_name\"\r\n                                  id=\"account_name\"\r\n                                  className=\"form-control\"\r\n                                  disabled\r\n                                />\r\n                                {errors.account_name &&\r\n                                  touched.account_name && (\r\n                                    <div className=\"error\">\r\n                                      {errors.account_name}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"abn\">BSB</label>\r\n                                <Field\r\n                                  type=\"text\"\r\n                                  name=\"bsb\"\r\n                                  id=\"bsb\"\r\n                                  className=\"form-control\"\r\n                                  disabled\r\n                                />\r\n                                {errors.bsb && touched.bsb && (\r\n                                  <div className=\"error\">{errors.bsb}</div>\r\n                                )}\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                              <div className=\"ProfileForm__group\">\r\n                                <label htmlFor=\"abn\">Account Number</label>\r\n                                <Field\r\n                                  type=\"number\"\r\n                                  name=\"account_number\"\r\n                                  id=\"account_number\"\r\n                                  className=\"form-control\"\r\n                                  disabled\r\n                                />\r\n                                {errors.account_number &&\r\n                                  touched.account_number && (\r\n                                    <div className=\"error\">\r\n                                      {errors.account_number}\r\n                                    </div>\r\n                                  )}\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                          {/* Submit Button */}\r\n                          <div className=\"ProfileForm__actions justify-content-end mt-2 p-0\">\r\n                            <button type=\"submit\" className=\"btn btn-teal\">\r\n                              {\" \"}\r\n                              Save Changes{\" \"}\r\n                            </button>\r\n                          </div>\r\n                          <Row>\r\n                            <Col lg={12}>\r\n                              <div className=\"disclaimer\">\r\n                                <p>\r\n                                  Please note that Bank Account details cannot\r\n                                  be edited after susmission. Please{\" \"}\r\n                                  <Link>Contact</Link> Us to request to change\r\n                                  your details.\r\n                                </p>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </fieldset>\r\n                      </Form>\r\n                    )}\r\n                  </Formik>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Breadcrumb","pathSegments","useLocation","pathname","split","filter","Boolean","length","pop","breadcrumbs","segment","map","index","secondLastSegment","lastSegment","_jsx","className","children","_jsxs","Link","to","src","homeIco","alt","replace","ProfileVehicleDetails","userData","token","useAuth","isLoading","setIsLoading","useState","AccountHolderDetails","setAccountHolderDetails","addressSuburb","setAddressSuburb","state","setState","suburb","setSuburb","postcode","setPostcode","navigate","useNavigate","useEffect","async","InstructorDetailsResponse","axios","get","API_ENDPOINTS","VIEW_BANKING_DETAILS","headers","Authorization","_InstructorDetailsRes","_InstructorDetailsRes2","_InstructorDetailsRes3","_InstructorDetailsRes4","data","success","billing_address","error","fetchInstructorDetails","validationSchema","Yup","shape","first_name","required","last_name","businessName","abn","gst_registration","BillingAddressUpdater","_ref","setFieldValue","useFormikContext","Container","Row","Col","lg","onClick","Formik","enableReinitialize","initialValues","business_name","bus_reg_gst","account_name","bsb","account_number","onSubmit","values","_ref2","setSubmitting","_addressSuburb$","_addressSuburb$2","_addressSuburb$3","_addressSuburb$4","_addressSuburb$5","_addressSuburb$6","_addressSuburb","_addressSuburb$7","updatedData","long_name","short_name","post","UPDATE_BANKING_DETAILS","Swal","console","_ref3","_addressSuburb$8","_addressSuburb2","_addressSuburb$9","errors","touched","Form","md","htmlFor","Field","type","name","id","disabled","for","value","AutocompleteAddress","billingAddrs","Array","isArray"],"sourceRoot":""}